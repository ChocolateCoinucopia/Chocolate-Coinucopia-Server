{
	"deploy": {
		"VM:-": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"main:1": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"ropsten:3": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"rinkeby:4": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"kovan:42": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"g√∂rli:5": {
			"linkReferences": {},
			"autoDeployLib": true
		},
		"Custom": {
			"linkReferences": {},
			"autoDeployLib": true
		}
	},
	"data": {
		"bytecode": {
			"functionDebugData": {
				"@_1015": {
					"entryPoint": null,
					"id": 1015,
					"parameterSlots": 1,
					"returnSlots": 0
				},
				"abi_decode_t_contract$_ChocolateCoin2_$960_fromMemory": {
					"entryPoint": 289,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"abi_decode_tuple_t_contract$_ChocolateCoin2_$960_fromMemory": {
					"entryPoint": 310,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"allocate_unbounded": {
					"entryPoint": null,
					"id": null,
					"parameterSlots": 0,
					"returnSlots": 1
				},
				"cleanup_t_address": {
					"entryPoint": 230,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"cleanup_t_contract$_ChocolateCoin2_$960": {
					"entryPoint": 248,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"cleanup_t_uint160": {
					"entryPoint": 198,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
					"entryPoint": null,
					"id": null,
					"parameterSlots": 0,
					"returnSlots": 0
				},
				"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
					"entryPoint": 193,
					"id": null,
					"parameterSlots": 0,
					"returnSlots": 0
				},
				"validator_revert_t_contract$_ChocolateCoin2_$960": {
					"entryPoint": 266,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 0
				}
			},
			"generatedSources": [
				{
					"ast": {
						"nodeType": "YulBlock",
						"src": "0:1455:2",
						"statements": [
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "47:35:2",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "57:19:2",
											"value": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "73:2:2",
														"type": "",
														"value": "64"
													}
												],
												"functionName": {
													"name": "mload",
													"nodeType": "YulIdentifier",
													"src": "67:5:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "67:9:2"
											},
											"variableNames": [
												{
													"name": "memPtr",
													"nodeType": "YulIdentifier",
													"src": "57:6:2"
												}
											]
										}
									]
								},
								"name": "allocate_unbounded",
								"nodeType": "YulFunctionDefinition",
								"returnVariables": [
									{
										"name": "memPtr",
										"nodeType": "YulTypedName",
										"src": "40:6:2",
										"type": ""
									}
								],
								"src": "7:75:2"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "177:28:2",
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "194:1:2",
														"type": "",
														"value": "0"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "197:1:2",
														"type": "",
														"value": "0"
													}
												],
												"functionName": {
													"name": "revert",
													"nodeType": "YulIdentifier",
													"src": "187:6:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "187:12:2"
											},
											"nodeType": "YulExpressionStatement",
											"src": "187:12:2"
										}
									]
								},
								"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
								"nodeType": "YulFunctionDefinition",
								"src": "88:117:2"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "300:28:2",
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "317:1:2",
														"type": "",
														"value": "0"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "320:1:2",
														"type": "",
														"value": "0"
													}
												],
												"functionName": {
													"name": "revert",
													"nodeType": "YulIdentifier",
													"src": "310:6:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "310:12:2"
											},
											"nodeType": "YulExpressionStatement",
											"src": "310:12:2"
										}
									]
								},
								"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
								"nodeType": "YulFunctionDefinition",
								"src": "211:117:2"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "379:81:2",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "389:65:2",
											"value": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "404:5:2"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "411:42:2",
														"type": "",
														"value": "0xffffffffffffffffffffffffffffffffffffffff"
													}
												],
												"functionName": {
													"name": "and",
													"nodeType": "YulIdentifier",
													"src": "400:3:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "400:54:2"
											},
											"variableNames": [
												{
													"name": "cleaned",
													"nodeType": "YulIdentifier",
													"src": "389:7:2"
												}
											]
										}
									]
								},
								"name": "cleanup_t_uint160",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "361:5:2",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "cleaned",
										"nodeType": "YulTypedName",
										"src": "371:7:2",
										"type": ""
									}
								],
								"src": "334:126:2"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "511:51:2",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "521:35:2",
											"value": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "550:5:2"
													}
												],
												"functionName": {
													"name": "cleanup_t_uint160",
													"nodeType": "YulIdentifier",
													"src": "532:17:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "532:24:2"
											},
											"variableNames": [
												{
													"name": "cleaned",
													"nodeType": "YulIdentifier",
													"src": "521:7:2"
												}
											]
										}
									]
								},
								"name": "cleanup_t_address",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "493:5:2",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "cleaned",
										"nodeType": "YulTypedName",
										"src": "503:7:2",
										"type": ""
									}
								],
								"src": "466:96:2"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "635:51:2",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "645:35:2",
											"value": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "674:5:2"
													}
												],
												"functionName": {
													"name": "cleanup_t_address",
													"nodeType": "YulIdentifier",
													"src": "656:17:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "656:24:2"
											},
											"variableNames": [
												{
													"name": "cleaned",
													"nodeType": "YulIdentifier",
													"src": "645:7:2"
												}
											]
										}
									]
								},
								"name": "cleanup_t_contract$_ChocolateCoin2_$960",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "617:5:2",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "cleaned",
										"nodeType": "YulTypedName",
										"src": "627:7:2",
										"type": ""
									}
								],
								"src": "568:118:2"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "757:101:2",
									"statements": [
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "836:16:2",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "845:1:2",
																	"type": "",
																	"value": "0"
																},
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "848:1:2",
																	"type": "",
																	"value": "0"
																}
															],
															"functionName": {
																"name": "revert",
																"nodeType": "YulIdentifier",
																"src": "838:6:2"
															},
															"nodeType": "YulFunctionCall",
															"src": "838:12:2"
														},
														"nodeType": "YulExpressionStatement",
														"src": "838:12:2"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "780:5:2"
															},
															{
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "827:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_contract$_ChocolateCoin2_$960",
																	"nodeType": "YulIdentifier",
																	"src": "787:39:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "787:46:2"
															}
														],
														"functionName": {
															"name": "eq",
															"nodeType": "YulIdentifier",
															"src": "777:2:2"
														},
														"nodeType": "YulFunctionCall",
														"src": "777:57:2"
													}
												],
												"functionName": {
													"name": "iszero",
													"nodeType": "YulIdentifier",
													"src": "770:6:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "770:65:2"
											},
											"nodeType": "YulIf",
											"src": "767:85:2"
										}
									]
								},
								"name": "validator_revert_t_contract$_ChocolateCoin2_$960",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "750:5:2",
										"type": ""
									}
								],
								"src": "692:166:2"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "949:102:2",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "959:22:2",
											"value": {
												"arguments": [
													{
														"name": "offset",
														"nodeType": "YulIdentifier",
														"src": "974:6:2"
													}
												],
												"functionName": {
													"name": "mload",
													"nodeType": "YulIdentifier",
													"src": "968:5:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "968:13:2"
											},
											"variableNames": [
												{
													"name": "value",
													"nodeType": "YulIdentifier",
													"src": "959:5:2"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "1039:5:2"
													}
												],
												"functionName": {
													"name": "validator_revert_t_contract$_ChocolateCoin2_$960",
													"nodeType": "YulIdentifier",
													"src": "990:48:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "990:55:2"
											},
											"nodeType": "YulExpressionStatement",
											"src": "990:55:2"
										}
									]
								},
								"name": "abi_decode_t_contract$_ChocolateCoin2_$960_fromMemory",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "offset",
										"nodeType": "YulTypedName",
										"src": "927:6:2",
										"type": ""
									},
									{
										"name": "end",
										"nodeType": "YulTypedName",
										"src": "935:3:2",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "943:5:2",
										"type": ""
									}
								],
								"src": "864:187:2"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "1156:296:2",
									"statements": [
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "1202:83:2",
												"statements": [
													{
														"expression": {
															"arguments": [],
															"functionName": {
																"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																"nodeType": "YulIdentifier",
																"src": "1204:77:2"
															},
															"nodeType": "YulFunctionCall",
															"src": "1204:79:2"
														},
														"nodeType": "YulExpressionStatement",
														"src": "1204:79:2"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "1177:7:2"
															},
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "1186:9:2"
															}
														],
														"functionName": {
															"name": "sub",
															"nodeType": "YulIdentifier",
															"src": "1173:3:2"
														},
														"nodeType": "YulFunctionCall",
														"src": "1173:23:2"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "1198:2:2",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "slt",
													"nodeType": "YulIdentifier",
													"src": "1169:3:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "1169:32:2"
											},
											"nodeType": "YulIf",
											"src": "1166:119:2"
										},
										{
											"nodeType": "YulBlock",
											"src": "1295:150:2",
											"statements": [
												{
													"nodeType": "YulVariableDeclaration",
													"src": "1310:15:2",
													"value": {
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "1324:1:2",
														"type": "",
														"value": "0"
													},
													"variables": [
														{
															"name": "offset",
															"nodeType": "YulTypedName",
															"src": "1314:6:2",
															"type": ""
														}
													]
												},
												{
													"nodeType": "YulAssignment",
													"src": "1339:96:2",
													"value": {
														"arguments": [
															{
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "1407:9:2"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "1418:6:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1403:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "1403:22:2"
															},
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "1427:7:2"
															}
														],
														"functionName": {
															"name": "abi_decode_t_contract$_ChocolateCoin2_$960_fromMemory",
															"nodeType": "YulIdentifier",
															"src": "1349:53:2"
														},
														"nodeType": "YulFunctionCall",
														"src": "1349:86:2"
													},
													"variableNames": [
														{
															"name": "value0",
															"nodeType": "YulIdentifier",
															"src": "1339:6:2"
														}
													]
												}
											]
										}
									]
								},
								"name": "abi_decode_tuple_t_contract$_ChocolateCoin2_$960_fromMemory",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "1126:9:2",
										"type": ""
									},
									{
										"name": "dataEnd",
										"nodeType": "YulTypedName",
										"src": "1137:7:2",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "1149:6:2",
										"type": ""
									}
								],
								"src": "1057:395:2"
							}
						]
					},
					"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function cleanup_t_contract$_ChocolateCoin2_$960(value) -> cleaned {\n        cleaned := cleanup_t_address(value)\n    }\n\n    function validator_revert_t_contract$_ChocolateCoin2_$960(value) {\n        if iszero(eq(value, cleanup_t_contract$_ChocolateCoin2_$960(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_contract$_ChocolateCoin2_$960_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_contract$_ChocolateCoin2_$960(value)\n    }\n\n    function abi_decode_tuple_t_contract$_ChocolateCoin2_$960_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_contract$_ChocolateCoin2_$960_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
					"id": 2,
					"language": "Yul",
					"name": "#utility.yul"
				}
			],
			"linkReferences": {},
			"object": "608060405234801561001057600080fd5b50604051610e34380380610e3483398181016040528101906100329190610136565b6000808190555033600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050610163565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006100f1826100c6565b9050919050565b6000610103826100e6565b9050919050565b610113816100f8565b811461011e57600080fd5b50565b6000815190506101308161010a565b92915050565b60006020828403121561014c5761014b6100c1565b5b600061015a84828501610121565b91505092915050565b610cc2806101726000396000f3fe6080604052600436106100705760003560e01c8063658d4e4f1161004e578063658d4e4f146100ce578063b02a668e146100f9578063c79bf7ca14610124578063fe4681961461014f57610070565b8063313ce56714610075578063380d831b146100a05780633ccfd60b146100b7575b600080fd5b34801561008157600080fd5b5061008a61016b565b60405161009791906106ed565b60405180910390f35b3480156100ac57600080fd5b506100b5610170565b005b3480156100c357600080fd5b506100cc61039b565b005b3480156100da57600080fd5b506100e3610460565b6040516100f09190610787565b60405180910390f35b34801561010557600080fd5b5061010e610486565b60405161011b91906107bb565b60405180910390f35b34801561013057600080fd5b50610139610492565b60405161014691906107bb565b60405180910390f35b61016960048036038101906101649190610807565b610498565b005b601281565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146101ca57600080fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ded6338b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016102869190610855565b602060405180830381865afa1580156102a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102c79190610885565b6040518363ffffffff1660e01b81526004016102e49291906108d3565b6020604051808303816000875af1158015610303573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103279190610934565b61033057600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610398573d6000803e3d6000fd5b50565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103f557600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f1935050505015801561045d573d6000803e3d6000fd5b50565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b67016345785d8a000081565b60005481565b6000600a905067016345785d8a00006012826104b49190610ac3565b6104be9190610b3d565b90506104ca348261069a565b82146104d557600080fd5b81600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016105319190610855565b602060405180830381865afa15801561054e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105729190610885565b101561057d57600080fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ded6338b33846040518363ffffffff1660e01b81526004016105da929190610b6e565b6020604051808303816000875af11580156105f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061061d9190610934565b61062657600080fd5b816000808282546106379190610b97565b9250508190555042433373ffffffffffffffffffffffffffffffffffffffff167fe771a8c700d0802cd276270eb0596a1aead6f28237a9e5f26e00ccf08dad703385600054483a60405161068e9493929190610bed565b60405180910390a45050565b6000808214806106c25750828283856106b39190610c32565b9250826106c09190610b3d565b145b6106cb57600080fd5b92915050565b600060ff82169050919050565b6106e7816106d1565b82525050565b600060208201905061070260008301846106de565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061074d61074861074384610708565b610728565b610708565b9050919050565b600061075f82610732565b9050919050565b600061077182610754565b9050919050565b61078181610766565b82525050565b600060208201905061079c6000830184610778565b92915050565b6000819050919050565b6107b5816107a2565b82525050565b60006020820190506107d060008301846107ac565b92915050565b600080fd5b6107e4816107a2565b81146107ef57600080fd5b50565b600081359050610801816107db565b92915050565b60006020828403121561081d5761081c6107d6565b5b600061082b848285016107f2565b91505092915050565b600061083f82610708565b9050919050565b61084f81610834565b82525050565b600060208201905061086a6000830184610846565b92915050565b60008151905061087f816107db565b92915050565b60006020828403121561089b5761089a6107d6565b5b60006108a984828501610870565b91505092915050565b60006108bd82610754565b9050919050565b6108cd816108b2565b82525050565b60006040820190506108e860008301856108c4565b6108f560208301846107ac565b9392505050565b60008115159050919050565b610911816108fc565b811461091c57600080fd5b50565b60008151905061092e81610908565b92915050565b60006020828403121561094a576109496107d6565b5b60006109588482850161091f565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008160011c9050919050565b6000808291508390505b60018511156109e7578086048111156109c3576109c2610961565b5b60018516156109d25780820291505b80810290506109e085610990565b94506109a7565b94509492505050565b600082610a005760019050610abc565b81610a0e5760009050610abc565b8160018114610a245760028114610a2e57610a5d565b6001915050610abc565b60ff841115610a4057610a3f610961565b5b8360020a915084821115610a5757610a56610961565b5b50610abc565b5060208310610133831016604e8410600b8410161715610a925782820a905083811115610a8d57610a8c610961565b5b610abc565b610a9f848484600161099d565b92509050818404811115610ab657610ab5610961565b5b81810290505b9392505050565b6000610ace826107a2565b9150610ad9836106d1565b9250610b067fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84846109f0565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610b48826107a2565b9150610b53836107a2565b925082610b6357610b62610b0e565b5b828204905092915050565b6000604082019050610b836000830185610846565b610b9060208301846107ac565b9392505050565b6000610ba2826107a2565b9150610bad836107a2565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610be257610be1610961565b5b828201905092915050565b6000608082019050610c0260008301876107ac565b610c0f60208301866107ac565b610c1c60408301856107ac565b610c2960608301846107ac565b95945050505050565b6000610c3d826107a2565b9150610c48836107a2565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610c8157610c80610961565b5b82820290509291505056fea2646970667358221220a5ab0f2b5ec42cb960bc11f168d5e68785b562c67e0a335e28daa082a9b27fc464736f6c634300080c0033",
			"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH2 0xE34 CODESIZE SUB DUP1 PUSH2 0xE34 DUP4 CODECOPY DUP2 DUP2 ADD PUSH1 0x40 MSTORE DUP2 ADD SWAP1 PUSH2 0x32 SWAP2 SWAP1 PUSH2 0x136 JUMP JUMPDEST PUSH1 0x0 DUP1 DUP2 SWAP1 SSTORE POP CALLER PUSH1 0x1 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP1 PUSH1 0x2 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP POP PUSH2 0x163 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xF1 DUP3 PUSH2 0xC6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x103 DUP3 PUSH2 0xE6 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x113 DUP2 PUSH2 0xF8 JUMP JUMPDEST DUP2 EQ PUSH2 0x11E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x130 DUP2 PUSH2 0x10A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x14C JUMPI PUSH2 0x14B PUSH2 0xC1 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x15A DUP5 DUP3 DUP6 ADD PUSH2 0x121 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0xCC2 DUP1 PUSH2 0x172 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x70 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x658D4E4F GT PUSH2 0x4E JUMPI DUP1 PUSH4 0x658D4E4F EQ PUSH2 0xCE JUMPI DUP1 PUSH4 0xB02A668E EQ PUSH2 0xF9 JUMPI DUP1 PUSH4 0xC79BF7CA EQ PUSH2 0x124 JUMPI DUP1 PUSH4 0xFE468196 EQ PUSH2 0x14F JUMPI PUSH2 0x70 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 EQ PUSH2 0x75 JUMPI DUP1 PUSH4 0x380D831B EQ PUSH2 0xA0 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0xB7 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x81 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x8A PUSH2 0x16B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x97 SWAP2 SWAP1 PUSH2 0x6ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB5 PUSH2 0x170 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xCC PUSH2 0x39B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xDA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE3 PUSH2 0x460 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF0 SWAP2 SWAP1 PUSH2 0x787 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x105 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10E PUSH2 0x486 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11B SWAP2 SWAP1 PUSH2 0x7BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x130 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x139 PUSH2 0x492 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x146 SWAP2 SWAP1 PUSH2 0x7BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x169 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x164 SWAP2 SWAP1 PUSH2 0x807 JUMP JUMPDEST PUSH2 0x498 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x12 DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDED6338B PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x286 SWAP2 SWAP1 PUSH2 0x855 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2A3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2C7 SWAP2 SWAP1 PUSH2 0x885 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E4 SWAP3 SWAP2 SWAP1 PUSH2 0x8D3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x303 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x327 SWAP2 SWAP1 PUSH2 0x934 JUMP JUMPDEST PUSH2 0x330 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x398 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x45D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH8 0x16345785D8A0000 DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA SWAP1 POP PUSH8 0x16345785D8A0000 PUSH1 0x12 DUP3 PUSH2 0x4B4 SWAP2 SWAP1 PUSH2 0xAC3 JUMP JUMPDEST PUSH2 0x4BE SWAP2 SWAP1 PUSH2 0xB3D JUMP JUMPDEST SWAP1 POP PUSH2 0x4CA CALLVALUE DUP3 PUSH2 0x69A JUMP JUMPDEST DUP3 EQ PUSH2 0x4D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x531 SWAP2 SWAP1 PUSH2 0x855 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x54E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x572 SWAP2 SWAP1 PUSH2 0x885 JUMP JUMPDEST LT ISZERO PUSH2 0x57D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDED6338B CALLER DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5DA SWAP3 SWAP2 SWAP1 PUSH2 0xB6E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5F9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x61D SWAP2 SWAP1 PUSH2 0x934 JUMP JUMPDEST PUSH2 0x626 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x0 DUP1 DUP3 DUP3 SLOAD PUSH2 0x637 SWAP2 SWAP1 PUSH2 0xB97 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP TIMESTAMP NUMBER CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE771A8C700D0802CD276270EB0596A1AEAD6F28237A9E5F26E00CCF08DAD7033 DUP6 PUSH1 0x0 SLOAD BASEFEE GASPRICE PUSH1 0x40 MLOAD PUSH2 0x68E SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xBED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EQ DUP1 PUSH2 0x6C2 JUMPI POP DUP3 DUP3 DUP4 DUP6 PUSH2 0x6B3 SWAP2 SWAP1 PUSH2 0xC32 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x6C0 SWAP2 SWAP1 PUSH2 0xB3D JUMP JUMPDEST EQ JUMPDEST PUSH2 0x6CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6E7 DUP2 PUSH2 0x6D1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x702 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x6DE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x74D PUSH2 0x748 PUSH2 0x743 DUP5 PUSH2 0x708 JUMP JUMPDEST PUSH2 0x728 JUMP JUMPDEST PUSH2 0x708 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x75F DUP3 PUSH2 0x732 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x771 DUP3 PUSH2 0x754 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x781 DUP2 PUSH2 0x766 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x79C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x778 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7B5 DUP2 PUSH2 0x7A2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x7D0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x7AC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7E4 DUP2 PUSH2 0x7A2 JUMP JUMPDEST DUP2 EQ PUSH2 0x7EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x801 DUP2 PUSH2 0x7DB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x81D JUMPI PUSH2 0x81C PUSH2 0x7D6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x82B DUP5 DUP3 DUP6 ADD PUSH2 0x7F2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x83F DUP3 PUSH2 0x708 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x84F DUP2 PUSH2 0x834 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x86A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x846 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x87F DUP2 PUSH2 0x7DB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x89B JUMPI PUSH2 0x89A PUSH2 0x7D6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x8A9 DUP5 DUP3 DUP6 ADD PUSH2 0x870 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8BD DUP3 PUSH2 0x754 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8CD DUP2 PUSH2 0x8B2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x8E8 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x8C4 JUMP JUMPDEST PUSH2 0x8F5 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x7AC JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x911 DUP2 PUSH2 0x8FC JUMP JUMPDEST DUP2 EQ PUSH2 0x91C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x92E DUP2 PUSH2 0x908 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x94A JUMPI PUSH2 0x949 PUSH2 0x7D6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x958 DUP5 DUP3 DUP6 ADD PUSH2 0x91F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x9E7 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x9C3 JUMPI PUSH2 0x9C2 PUSH2 0x961 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x9D2 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x9E0 DUP6 PUSH2 0x990 JUMP JUMPDEST SWAP5 POP PUSH2 0x9A7 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xA00 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0xABC JUMP JUMPDEST DUP2 PUSH2 0xA0E JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0xABC JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0xA24 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0xA2E JUMPI PUSH2 0xA5D JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0xABC JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0xA40 JUMPI PUSH2 0xA3F PUSH2 0x961 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0xA57 JUMPI PUSH2 0xA56 PUSH2 0x961 JUMP JUMPDEST JUMPDEST POP PUSH2 0xABC JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0xA92 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0xA8D JUMPI PUSH2 0xA8C PUSH2 0x961 JUMP JUMPDEST JUMPDEST PUSH2 0xABC JUMP JUMPDEST PUSH2 0xA9F DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x99D JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0xAB6 JUMPI PUSH2 0xAB5 PUSH2 0x961 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xACE DUP3 PUSH2 0x7A2 JUMP JUMPDEST SWAP2 POP PUSH2 0xAD9 DUP4 PUSH2 0x6D1 JUMP JUMPDEST SWAP3 POP PUSH2 0xB06 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x9F0 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xB48 DUP3 PUSH2 0x7A2 JUMP JUMPDEST SWAP2 POP PUSH2 0xB53 DUP4 PUSH2 0x7A2 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xB63 JUMPI PUSH2 0xB62 PUSH2 0xB0E JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xB83 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x846 JUMP JUMPDEST PUSH2 0xB90 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x7AC JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBA2 DUP3 PUSH2 0x7A2 JUMP JUMPDEST SWAP2 POP PUSH2 0xBAD DUP4 PUSH2 0x7A2 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0xBE2 JUMPI PUSH2 0xBE1 PUSH2 0x961 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0xC02 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x7AC JUMP JUMPDEST PUSH2 0xC0F PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x7AC JUMP JUMPDEST PUSH2 0xC1C PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x7AC JUMP JUMPDEST PUSH2 0xC29 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x7AC JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC3D DUP3 PUSH2 0x7A2 JUMP JUMPDEST SWAP2 POP PUSH2 0xC48 DUP4 PUSH2 0x7A2 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xC81 JUMPI PUSH2 0xC80 PUSH2 0x961 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA5 0xAB 0xF 0x2B 0x5E 0xC4 0x2C 0xB9 PUSH1 0xBC GT CALL PUSH9 0xD5E68785B562C67E0A CALLER 0x5E 0x28 0xDA LOG0 DUP3 0xA9 0xB2 PUSH32 0xC464736F6C634300080C00330000000000000000000000000000000000000000 ",
			"sourceMap": "102:1621:1:-:0;;;582:153;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;647:1;635:9;:13;;;;678:10;659:8;;:30;;;;;;;;;;;;;;;;;;715:13;700:12;;:28;;;;;;;;;;;;;;;;;;582:153;102:1621;;88:117:2;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:118::-;627:7;656:24;674:5;656:24;:::i;:::-;645:35;;568:118;;;:::o;692:166::-;787:46;827:5;787:46;:::i;:::-;780:5;777:57;767:85;;848:1;845;838:12;767:85;692:166;:::o;864:187::-;943:5;974:6;968:13;959:22;;990:55;1039:5;990:55;:::i;:::-;864:187;;;;:::o;1057:395::-;1149:6;1198:2;1186:9;1177:7;1173:23;1169:32;1166:119;;;1204:79;;:::i;:::-;1166:119;1324:1;1349:86;1427:7;1418:6;1407:9;1403:22;1349:86;:::i;:::-;1339:96;;1295:150;1057:395;;;;:::o;102:1621:1:-;;;;;;;"
		},
		"deployedBytecode": {
			"functionDebugData": {
				"@CoinContract_976": {
					"entryPoint": 1120,
					"id": 976,
					"parameterSlots": 0,
					"returnSlots": 0
				},
				"@CoinPrice_969": {
					"entryPoint": 1158,
					"id": 969,
					"parameterSlots": 0,
					"returnSlots": 0
				},
				"@CoinsSold_971": {
					"entryPoint": 1170,
					"id": 971,
					"parameterSlots": 0,
					"returnSlots": 0
				},
				"@buyCoins_1110": {
					"entryPoint": 1176,
					"id": 1110,
					"parameterSlots": 1,
					"returnSlots": 0
				},
				"@decimals_966": {
					"entryPoint": 363,
					"id": 966,
					"parameterSlots": 0,
					"returnSlots": 0
				},
				"@endSale_1166": {
					"entryPoint": 368,
					"id": 1166,
					"parameterSlots": 0,
					"returnSlots": 0
				},
				"@multiply_1042": {
					"entryPoint": 1690,
					"id": 1042,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"@withdraw_1131": {
					"entryPoint": 923,
					"id": 1131,
					"parameterSlots": 0,
					"returnSlots": 0
				},
				"abi_decode_t_bool_fromMemory": {
					"entryPoint": 2335,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"abi_decode_t_uint256": {
					"entryPoint": 2034,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"abi_decode_t_uint256_fromMemory": {
					"entryPoint": 2160,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"abi_decode_tuple_t_bool_fromMemory": {
					"entryPoint": 2356,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"abi_decode_tuple_t_uint256": {
					"entryPoint": 2055,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"abi_decode_tuple_t_uint256_fromMemory": {
					"entryPoint": 2181,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"abi_encode_t_address_payable_to_t_address_fromStack": {
					"entryPoint": 2244,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 0
				},
				"abi_encode_t_address_to_t_address_fromStack": {
					"entryPoint": 2118,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 0
				},
				"abi_encode_t_contract$_ChocolateCoin2_$960_to_t_address_fromStack": {
					"entryPoint": 1912,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 0
				},
				"abi_encode_t_uint256_to_t_uint256_fromStack": {
					"entryPoint": 1964,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 0
				},
				"abi_encode_t_uint8_to_t_uint8_fromStack": {
					"entryPoint": 1758,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 0
				},
				"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
					"entryPoint": 2133,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"abi_encode_tuple_t_address_payable_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
					"entryPoint": 2259,
					"id": null,
					"parameterSlots": 3,
					"returnSlots": 1
				},
				"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
					"entryPoint": 2926,
					"id": null,
					"parameterSlots": 3,
					"returnSlots": 1
				},
				"abi_encode_tuple_t_contract$_ChocolateCoin2_$960__to_t_address__fromStack_reversed": {
					"entryPoint": 1927,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
					"entryPoint": 1979,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
					"entryPoint": 3053,
					"id": null,
					"parameterSlots": 5,
					"returnSlots": 1
				},
				"abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed": {
					"entryPoint": 1773,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"allocate_unbounded": {
					"entryPoint": null,
					"id": null,
					"parameterSlots": 0,
					"returnSlots": 1
				},
				"checked_add_t_uint256": {
					"entryPoint": 2967,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"checked_div_t_uint256": {
					"entryPoint": 2877,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"checked_exp_helper": {
					"entryPoint": 2461,
					"id": null,
					"parameterSlots": 4,
					"returnSlots": 2
				},
				"checked_exp_t_uint256_t_uint8": {
					"entryPoint": 2755,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"checked_exp_unsigned": {
					"entryPoint": 2544,
					"id": null,
					"parameterSlots": 3,
					"returnSlots": 1
				},
				"checked_mul_t_uint256": {
					"entryPoint": 3122,
					"id": null,
					"parameterSlots": 2,
					"returnSlots": 1
				},
				"cleanup_t_address": {
					"entryPoint": 2100,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"cleanup_t_bool": {
					"entryPoint": 2300,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"cleanup_t_uint160": {
					"entryPoint": 1800,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"cleanup_t_uint256": {
					"entryPoint": 1954,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"cleanup_t_uint8": {
					"entryPoint": 1745,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"convert_t_address_payable_to_t_address": {
					"entryPoint": 2226,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"convert_t_contract$_ChocolateCoin2_$960_to_t_address": {
					"entryPoint": 1894,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"convert_t_uint160_to_t_address": {
					"entryPoint": 1876,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"convert_t_uint160_to_t_uint160": {
					"entryPoint": 1842,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"identity": {
					"entryPoint": 1832,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"panic_error_0x11": {
					"entryPoint": 2401,
					"id": null,
					"parameterSlots": 0,
					"returnSlots": 0
				},
				"panic_error_0x12": {
					"entryPoint": 2830,
					"id": null,
					"parameterSlots": 0,
					"returnSlots": 0
				},
				"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
					"entryPoint": null,
					"id": null,
					"parameterSlots": 0,
					"returnSlots": 0
				},
				"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
					"entryPoint": 2006,
					"id": null,
					"parameterSlots": 0,
					"returnSlots": 0
				},
				"shift_right_1_unsigned": {
					"entryPoint": 2448,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 1
				},
				"validator_revert_t_bool": {
					"entryPoint": 2312,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 0
				},
				"validator_revert_t_uint256": {
					"entryPoint": 2011,
					"id": null,
					"parameterSlots": 1,
					"returnSlots": 0
				}
			},
			"generatedSources": [
				{
					"ast": {
						"nodeType": "YulBlock",
						"src": "0:9661:2",
						"statements": [
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "50:43:2",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "60:27:2",
											"value": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "75:5:2"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "82:4:2",
														"type": "",
														"value": "0xff"
													}
												],
												"functionName": {
													"name": "and",
													"nodeType": "YulIdentifier",
													"src": "71:3:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "71:16:2"
											},
											"variableNames": [
												{
													"name": "cleaned",
													"nodeType": "YulIdentifier",
													"src": "60:7:2"
												}
											]
										}
									]
								},
								"name": "cleanup_t_uint8",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "32:5:2",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "cleaned",
										"nodeType": "YulTypedName",
										"src": "42:7:2",
										"type": ""
									}
								],
								"src": "7:86:2"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "160:51:2",
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"name": "pos",
														"nodeType": "YulIdentifier",
														"src": "177:3:2"
													},
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "198:5:2"
															}
														],
														"functionName": {
															"name": "cleanup_t_uint8",
															"nodeType": "YulIdentifier",
															"src": "182:15:2"
														},
														"nodeType": "YulFunctionCall",
														"src": "182:22:2"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "170:6:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "170:35:2"
											},
											"nodeType": "YulExpressionStatement",
											"src": "170:35:2"
										}
									]
								},
								"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "148:5:2",
										"type": ""
									},
									{
										"name": "pos",
										"nodeType": "YulTypedName",
										"src": "155:3:2",
										"type": ""
									}
								],
								"src": "99:112:2"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "311:120:2",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "321:26:2",
											"value": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "333:9:2"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "344:2:2",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "329:3:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "329:18:2"
											},
											"variableNames": [
												{
													"name": "tail",
													"nodeType": "YulIdentifier",
													"src": "321:4:2"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value0",
														"nodeType": "YulIdentifier",
														"src": "397:6:2"
													},
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "410:9:2"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "421:1:2",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "406:3:2"
														},
														"nodeType": "YulFunctionCall",
														"src": "406:17:2"
													}
												],
												"functionName": {
													"name": "abi_encode_t_uint8_to_t_uint8_fromStack",
													"nodeType": "YulIdentifier",
													"src": "357:39:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "357:67:2"
											},
											"nodeType": "YulExpressionStatement",
											"src": "357:67:2"
										}
									]
								},
								"name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "283:9:2",
										"type": ""
									},
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "295:6:2",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "tail",
										"nodeType": "YulTypedName",
										"src": "306:4:2",
										"type": ""
									}
								],
								"src": "217:214:2"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "482:81:2",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "492:65:2",
											"value": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "507:5:2"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "514:42:2",
														"type": "",
														"value": "0xffffffffffffffffffffffffffffffffffffffff"
													}
												],
												"functionName": {
													"name": "and",
													"nodeType": "YulIdentifier",
													"src": "503:3:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "503:54:2"
											},
											"variableNames": [
												{
													"name": "cleaned",
													"nodeType": "YulIdentifier",
													"src": "492:7:2"
												}
											]
										}
									]
								},
								"name": "cleanup_t_uint160",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "464:5:2",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "cleaned",
										"nodeType": "YulTypedName",
										"src": "474:7:2",
										"type": ""
									}
								],
								"src": "437:126:2"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "601:28:2",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "611:12:2",
											"value": {
												"name": "value",
												"nodeType": "YulIdentifier",
												"src": "618:5:2"
											},
											"variableNames": [
												{
													"name": "ret",
													"nodeType": "YulIdentifier",
													"src": "611:3:2"
												}
											]
										}
									]
								},
								"name": "identity",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "587:5:2",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "ret",
										"nodeType": "YulTypedName",
										"src": "597:3:2",
										"type": ""
									}
								],
								"src": "569:60:2"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "695:82:2",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "705:66:2",
											"value": {
												"arguments": [
													{
														"arguments": [
															{
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "763:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nodeType": "YulIdentifier",
																	"src": "745:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "745:24:2"
															}
														],
														"functionName": {
															"name": "identity",
															"nodeType": "YulIdentifier",
															"src": "736:8:2"
														},
														"nodeType": "YulFunctionCall",
														"src": "736:34:2"
													}
												],
												"functionName": {
													"name": "cleanup_t_uint160",
													"nodeType": "YulIdentifier",
													"src": "718:17:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "718:53:2"
											},
											"variableNames": [
												{
													"name": "converted",
													"nodeType": "YulIdentifier",
													"src": "705:9:2"
												}
											]
										}
									]
								},
								"name": "convert_t_uint160_to_t_uint160",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "675:5:2",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "converted",
										"nodeType": "YulTypedName",
										"src": "685:9:2",
										"type": ""
									}
								],
								"src": "635:142:2"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "843:66:2",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "853:50:2",
											"value": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "897:5:2"
													}
												],
												"functionName": {
													"name": "convert_t_uint160_to_t_uint160",
													"nodeType": "YulIdentifier",
													"src": "866:30:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "866:37:2"
											},
											"variableNames": [
												{
													"name": "converted",
													"nodeType": "YulIdentifier",
													"src": "853:9:2"
												}
											]
										}
									]
								},
								"name": "convert_t_uint160_to_t_address",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "823:5:2",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "converted",
										"nodeType": "YulTypedName",
										"src": "833:9:2",
										"type": ""
									}
								],
								"src": "783:126:2"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "997:66:2",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "1007:50:2",
											"value": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "1051:5:2"
													}
												],
												"functionName": {
													"name": "convert_t_uint160_to_t_address",
													"nodeType": "YulIdentifier",
													"src": "1020:30:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "1020:37:2"
											},
											"variableNames": [
												{
													"name": "converted",
													"nodeType": "YulIdentifier",
													"src": "1007:9:2"
												}
											]
										}
									]
								},
								"name": "convert_t_contract$_ChocolateCoin2_$960_to_t_address",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "977:5:2",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "converted",
										"nodeType": "YulTypedName",
										"src": "987:9:2",
										"type": ""
									}
								],
								"src": "915:148:2"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "1156:88:2",
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"name": "pos",
														"nodeType": "YulIdentifier",
														"src": "1173:3:2"
													},
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1231:5:2"
															}
														],
														"functionName": {
															"name": "convert_t_contract$_ChocolateCoin2_$960_to_t_address",
															"nodeType": "YulIdentifier",
															"src": "1178:52:2"
														},
														"nodeType": "YulFunctionCall",
														"src": "1178:59:2"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "1166:6:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "1166:72:2"
											},
											"nodeType": "YulExpressionStatement",
											"src": "1166:72:2"
										}
									]
								},
								"name": "abi_encode_t_contract$_ChocolateCoin2_$960_to_t_address_fromStack",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "1144:5:2",
										"type": ""
									},
									{
										"name": "pos",
										"nodeType": "YulTypedName",
										"src": "1151:3:2",
										"type": ""
									}
								],
								"src": "1069:175:2"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "1370:146:2",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "1380:26:2",
											"value": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "1392:9:2"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "1403:2:2",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "1388:3:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "1388:18:2"
											},
											"variableNames": [
												{
													"name": "tail",
													"nodeType": "YulIdentifier",
													"src": "1380:4:2"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value0",
														"nodeType": "YulIdentifier",
														"src": "1482:6:2"
													},
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "1495:9:2"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1506:1:2",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "1491:3:2"
														},
														"nodeType": "YulFunctionCall",
														"src": "1491:17:2"
													}
												],
												"functionName": {
													"name": "abi_encode_t_contract$_ChocolateCoin2_$960_to_t_address_fromStack",
													"nodeType": "YulIdentifier",
													"src": "1416:65:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "1416:93:2"
											},
											"nodeType": "YulExpressionStatement",
											"src": "1416:93:2"
										}
									]
								},
								"name": "abi_encode_tuple_t_contract$_ChocolateCoin2_$960__to_t_address__fromStack_reversed",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "1342:9:2",
										"type": ""
									},
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "1354:6:2",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "tail",
										"nodeType": "YulTypedName",
										"src": "1365:4:2",
										"type": ""
									}
								],
								"src": "1250:266:2"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "1567:32:2",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "1577:16:2",
											"value": {
												"name": "value",
												"nodeType": "YulIdentifier",
												"src": "1588:5:2"
											},
											"variableNames": [
												{
													"name": "cleaned",
													"nodeType": "YulIdentifier",
													"src": "1577:7:2"
												}
											]
										}
									]
								},
								"name": "cleanup_t_uint256",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "1549:5:2",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "cleaned",
										"nodeType": "YulTypedName",
										"src": "1559:7:2",
										"type": ""
									}
								],
								"src": "1522:77:2"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "1670:53:2",
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"name": "pos",
														"nodeType": "YulIdentifier",
														"src": "1687:3:2"
													},
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1710:5:2"
															}
														],
														"functionName": {
															"name": "cleanup_t_uint256",
															"nodeType": "YulIdentifier",
															"src": "1692:17:2"
														},
														"nodeType": "YulFunctionCall",
														"src": "1692:24:2"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "1680:6:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "1680:37:2"
											},
											"nodeType": "YulExpressionStatement",
											"src": "1680:37:2"
										}
									]
								},
								"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "1658:5:2",
										"type": ""
									},
									{
										"name": "pos",
										"nodeType": "YulTypedName",
										"src": "1665:3:2",
										"type": ""
									}
								],
								"src": "1605:118:2"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "1827:124:2",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "1837:26:2",
											"value": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "1849:9:2"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "1860:2:2",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "1845:3:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "1845:18:2"
											},
											"variableNames": [
												{
													"name": "tail",
													"nodeType": "YulIdentifier",
													"src": "1837:4:2"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value0",
														"nodeType": "YulIdentifier",
														"src": "1917:6:2"
													},
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "1930:9:2"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "1941:1:2",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "1926:3:2"
														},
														"nodeType": "YulFunctionCall",
														"src": "1926:17:2"
													}
												],
												"functionName": {
													"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
													"nodeType": "YulIdentifier",
													"src": "1873:43:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "1873:71:2"
											},
											"nodeType": "YulExpressionStatement",
											"src": "1873:71:2"
										}
									]
								},
								"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "1799:9:2",
										"type": ""
									},
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "1811:6:2",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "tail",
										"nodeType": "YulTypedName",
										"src": "1822:4:2",
										"type": ""
									}
								],
								"src": "1729:222:2"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "1997:35:2",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "2007:19:2",
											"value": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "2023:2:2",
														"type": "",
														"value": "64"
													}
												],
												"functionName": {
													"name": "mload",
													"nodeType": "YulIdentifier",
													"src": "2017:5:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "2017:9:2"
											},
											"variableNames": [
												{
													"name": "memPtr",
													"nodeType": "YulIdentifier",
													"src": "2007:6:2"
												}
											]
										}
									]
								},
								"name": "allocate_unbounded",
								"nodeType": "YulFunctionDefinition",
								"returnVariables": [
									{
										"name": "memPtr",
										"nodeType": "YulTypedName",
										"src": "1990:6:2",
										"type": ""
									}
								],
								"src": "1957:75:2"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "2127:28:2",
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "2144:1:2",
														"type": "",
														"value": "0"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "2147:1:2",
														"type": "",
														"value": "0"
													}
												],
												"functionName": {
													"name": "revert",
													"nodeType": "YulIdentifier",
													"src": "2137:6:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "2137:12:2"
											},
											"nodeType": "YulExpressionStatement",
											"src": "2137:12:2"
										}
									]
								},
								"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
								"nodeType": "YulFunctionDefinition",
								"src": "2038:117:2"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "2250:28:2",
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "2267:1:2",
														"type": "",
														"value": "0"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "2270:1:2",
														"type": "",
														"value": "0"
													}
												],
												"functionName": {
													"name": "revert",
													"nodeType": "YulIdentifier",
													"src": "2260:6:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "2260:12:2"
											},
											"nodeType": "YulExpressionStatement",
											"src": "2260:12:2"
										}
									]
								},
								"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
								"nodeType": "YulFunctionDefinition",
								"src": "2161:117:2"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "2327:79:2",
									"statements": [
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "2384:16:2",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "2393:1:2",
																	"type": "",
																	"value": "0"
																},
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "2396:1:2",
																	"type": "",
																	"value": "0"
																}
															],
															"functionName": {
																"name": "revert",
																"nodeType": "YulIdentifier",
																"src": "2386:6:2"
															},
															"nodeType": "YulFunctionCall",
															"src": "2386:12:2"
														},
														"nodeType": "YulExpressionStatement",
														"src": "2386:12:2"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "2350:5:2"
															},
															{
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "2375:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "2357:17:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2357:24:2"
															}
														],
														"functionName": {
															"name": "eq",
															"nodeType": "YulIdentifier",
															"src": "2347:2:2"
														},
														"nodeType": "YulFunctionCall",
														"src": "2347:35:2"
													}
												],
												"functionName": {
													"name": "iszero",
													"nodeType": "YulIdentifier",
													"src": "2340:6:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "2340:43:2"
											},
											"nodeType": "YulIf",
											"src": "2337:63:2"
										}
									]
								},
								"name": "validator_revert_t_uint256",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "2320:5:2",
										"type": ""
									}
								],
								"src": "2284:122:2"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "2464:87:2",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "2474:29:2",
											"value": {
												"arguments": [
													{
														"name": "offset",
														"nodeType": "YulIdentifier",
														"src": "2496:6:2"
													}
												],
												"functionName": {
													"name": "calldataload",
													"nodeType": "YulIdentifier",
													"src": "2483:12:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "2483:20:2"
											},
											"variableNames": [
												{
													"name": "value",
													"nodeType": "YulIdentifier",
													"src": "2474:5:2"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "2539:5:2"
													}
												],
												"functionName": {
													"name": "validator_revert_t_uint256",
													"nodeType": "YulIdentifier",
													"src": "2512:26:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "2512:33:2"
											},
											"nodeType": "YulExpressionStatement",
											"src": "2512:33:2"
										}
									]
								},
								"name": "abi_decode_t_uint256",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "offset",
										"nodeType": "YulTypedName",
										"src": "2442:6:2",
										"type": ""
									},
									{
										"name": "end",
										"nodeType": "YulTypedName",
										"src": "2450:3:2",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "2458:5:2",
										"type": ""
									}
								],
								"src": "2412:139:2"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "2623:263:2",
									"statements": [
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "2669:83:2",
												"statements": [
													{
														"expression": {
															"arguments": [],
															"functionName": {
																"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																"nodeType": "YulIdentifier",
																"src": "2671:77:2"
															},
															"nodeType": "YulFunctionCall",
															"src": "2671:79:2"
														},
														"nodeType": "YulExpressionStatement",
														"src": "2671:79:2"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "2644:7:2"
															},
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "2653:9:2"
															}
														],
														"functionName": {
															"name": "sub",
															"nodeType": "YulIdentifier",
															"src": "2640:3:2"
														},
														"nodeType": "YulFunctionCall",
														"src": "2640:23:2"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "2665:2:2",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "slt",
													"nodeType": "YulIdentifier",
													"src": "2636:3:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "2636:32:2"
											},
											"nodeType": "YulIf",
											"src": "2633:119:2"
										},
										{
											"nodeType": "YulBlock",
											"src": "2762:117:2",
											"statements": [
												{
													"nodeType": "YulVariableDeclaration",
													"src": "2777:15:2",
													"value": {
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "2791:1:2",
														"type": "",
														"value": "0"
													},
													"variables": [
														{
															"name": "offset",
															"nodeType": "YulTypedName",
															"src": "2781:6:2",
															"type": ""
														}
													]
												},
												{
													"nodeType": "YulAssignment",
													"src": "2806:63:2",
													"value": {
														"arguments": [
															{
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "2841:9:2"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "2852:6:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "2837:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "2837:22:2"
															},
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "2861:7:2"
															}
														],
														"functionName": {
															"name": "abi_decode_t_uint256",
															"nodeType": "YulIdentifier",
															"src": "2816:20:2"
														},
														"nodeType": "YulFunctionCall",
														"src": "2816:53:2"
													},
													"variableNames": [
														{
															"name": "value0",
															"nodeType": "YulIdentifier",
															"src": "2806:6:2"
														}
													]
												}
											]
										}
									]
								},
								"name": "abi_decode_tuple_t_uint256",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "2593:9:2",
										"type": ""
									},
									{
										"name": "dataEnd",
										"nodeType": "YulTypedName",
										"src": "2604:7:2",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "2616:6:2",
										"type": ""
									}
								],
								"src": "2557:329:2"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "2937:51:2",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "2947:35:2",
											"value": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "2976:5:2"
													}
												],
												"functionName": {
													"name": "cleanup_t_uint160",
													"nodeType": "YulIdentifier",
													"src": "2958:17:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "2958:24:2"
											},
											"variableNames": [
												{
													"name": "cleaned",
													"nodeType": "YulIdentifier",
													"src": "2947:7:2"
												}
											]
										}
									]
								},
								"name": "cleanup_t_address",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "2919:5:2",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "cleaned",
										"nodeType": "YulTypedName",
										"src": "2929:7:2",
										"type": ""
									}
								],
								"src": "2892:96:2"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "3059:53:2",
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"name": "pos",
														"nodeType": "YulIdentifier",
														"src": "3076:3:2"
													},
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "3099:5:2"
															}
														],
														"functionName": {
															"name": "cleanup_t_address",
															"nodeType": "YulIdentifier",
															"src": "3081:17:2"
														},
														"nodeType": "YulFunctionCall",
														"src": "3081:24:2"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "3069:6:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "3069:37:2"
											},
											"nodeType": "YulExpressionStatement",
											"src": "3069:37:2"
										}
									]
								},
								"name": "abi_encode_t_address_to_t_address_fromStack",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "3047:5:2",
										"type": ""
									},
									{
										"name": "pos",
										"nodeType": "YulTypedName",
										"src": "3054:3:2",
										"type": ""
									}
								],
								"src": "2994:118:2"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "3216:124:2",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "3226:26:2",
											"value": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "3238:9:2"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "3249:2:2",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "3234:3:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "3234:18:2"
											},
											"variableNames": [
												{
													"name": "tail",
													"nodeType": "YulIdentifier",
													"src": "3226:4:2"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value0",
														"nodeType": "YulIdentifier",
														"src": "3306:6:2"
													},
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "3319:9:2"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "3330:1:2",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "3315:3:2"
														},
														"nodeType": "YulFunctionCall",
														"src": "3315:17:2"
													}
												],
												"functionName": {
													"name": "abi_encode_t_address_to_t_address_fromStack",
													"nodeType": "YulIdentifier",
													"src": "3262:43:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "3262:71:2"
											},
											"nodeType": "YulExpressionStatement",
											"src": "3262:71:2"
										}
									]
								},
								"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "3188:9:2",
										"type": ""
									},
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "3200:6:2",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "tail",
										"nodeType": "YulTypedName",
										"src": "3211:4:2",
										"type": ""
									}
								],
								"src": "3118:222:2"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "3409:80:2",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "3419:22:2",
											"value": {
												"arguments": [
													{
														"name": "offset",
														"nodeType": "YulIdentifier",
														"src": "3434:6:2"
													}
												],
												"functionName": {
													"name": "mload",
													"nodeType": "YulIdentifier",
													"src": "3428:5:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "3428:13:2"
											},
											"variableNames": [
												{
													"name": "value",
													"nodeType": "YulIdentifier",
													"src": "3419:5:2"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "3477:5:2"
													}
												],
												"functionName": {
													"name": "validator_revert_t_uint256",
													"nodeType": "YulIdentifier",
													"src": "3450:26:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "3450:33:2"
											},
											"nodeType": "YulExpressionStatement",
											"src": "3450:33:2"
										}
									]
								},
								"name": "abi_decode_t_uint256_fromMemory",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "offset",
										"nodeType": "YulTypedName",
										"src": "3387:6:2",
										"type": ""
									},
									{
										"name": "end",
										"nodeType": "YulTypedName",
										"src": "3395:3:2",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "3403:5:2",
										"type": ""
									}
								],
								"src": "3346:143:2"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "3572:274:2",
									"statements": [
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "3618:83:2",
												"statements": [
													{
														"expression": {
															"arguments": [],
															"functionName": {
																"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																"nodeType": "YulIdentifier",
																"src": "3620:77:2"
															},
															"nodeType": "YulFunctionCall",
															"src": "3620:79:2"
														},
														"nodeType": "YulExpressionStatement",
														"src": "3620:79:2"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "3593:7:2"
															},
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "3602:9:2"
															}
														],
														"functionName": {
															"name": "sub",
															"nodeType": "YulIdentifier",
															"src": "3589:3:2"
														},
														"nodeType": "YulFunctionCall",
														"src": "3589:23:2"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "3614:2:2",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "slt",
													"nodeType": "YulIdentifier",
													"src": "3585:3:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "3585:32:2"
											},
											"nodeType": "YulIf",
											"src": "3582:119:2"
										},
										{
											"nodeType": "YulBlock",
											"src": "3711:128:2",
											"statements": [
												{
													"nodeType": "YulVariableDeclaration",
													"src": "3726:15:2",
													"value": {
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "3740:1:2",
														"type": "",
														"value": "0"
													},
													"variables": [
														{
															"name": "offset",
															"nodeType": "YulTypedName",
															"src": "3730:6:2",
															"type": ""
														}
													]
												},
												{
													"nodeType": "YulAssignment",
													"src": "3755:74:2",
													"value": {
														"arguments": [
															{
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "3801:9:2"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "3812:6:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "3797:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "3797:22:2"
															},
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "3821:7:2"
															}
														],
														"functionName": {
															"name": "abi_decode_t_uint256_fromMemory",
															"nodeType": "YulIdentifier",
															"src": "3765:31:2"
														},
														"nodeType": "YulFunctionCall",
														"src": "3765:64:2"
													},
													"variableNames": [
														{
															"name": "value0",
															"nodeType": "YulIdentifier",
															"src": "3755:6:2"
														}
													]
												}
											]
										}
									]
								},
								"name": "abi_decode_tuple_t_uint256_fromMemory",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "3542:9:2",
										"type": ""
									},
									{
										"name": "dataEnd",
										"nodeType": "YulTypedName",
										"src": "3553:7:2",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "3565:6:2",
										"type": ""
									}
								],
								"src": "3495:351:2"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "3920:66:2",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "3930:50:2",
											"value": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "3974:5:2"
													}
												],
												"functionName": {
													"name": "convert_t_uint160_to_t_address",
													"nodeType": "YulIdentifier",
													"src": "3943:30:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "3943:37:2"
											},
											"variableNames": [
												{
													"name": "converted",
													"nodeType": "YulIdentifier",
													"src": "3930:9:2"
												}
											]
										}
									]
								},
								"name": "convert_t_address_payable_to_t_address",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "3900:5:2",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "converted",
										"nodeType": "YulTypedName",
										"src": "3910:9:2",
										"type": ""
									}
								],
								"src": "3852:134:2"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "4065:74:2",
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"name": "pos",
														"nodeType": "YulIdentifier",
														"src": "4082:3:2"
													},
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4126:5:2"
															}
														],
														"functionName": {
															"name": "convert_t_address_payable_to_t_address",
															"nodeType": "YulIdentifier",
															"src": "4087:38:2"
														},
														"nodeType": "YulFunctionCall",
														"src": "4087:45:2"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "4075:6:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "4075:58:2"
											},
											"nodeType": "YulExpressionStatement",
											"src": "4075:58:2"
										}
									]
								},
								"name": "abi_encode_t_address_payable_to_t_address_fromStack",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "4053:5:2",
										"type": ""
									},
									{
										"name": "pos",
										"nodeType": "YulTypedName",
										"src": "4060:3:2",
										"type": ""
									}
								],
								"src": "3992:147:2"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "4279:214:2",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "4289:26:2",
											"value": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "4301:9:2"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "4312:2:2",
														"type": "",
														"value": "64"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "4297:3:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "4297:18:2"
											},
											"variableNames": [
												{
													"name": "tail",
													"nodeType": "YulIdentifier",
													"src": "4289:4:2"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value0",
														"nodeType": "YulIdentifier",
														"src": "4377:6:2"
													},
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "4390:9:2"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4401:1:2",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "4386:3:2"
														},
														"nodeType": "YulFunctionCall",
														"src": "4386:17:2"
													}
												],
												"functionName": {
													"name": "abi_encode_t_address_payable_to_t_address_fromStack",
													"nodeType": "YulIdentifier",
													"src": "4325:51:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "4325:79:2"
											},
											"nodeType": "YulExpressionStatement",
											"src": "4325:79:2"
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value1",
														"nodeType": "YulIdentifier",
														"src": "4458:6:2"
													},
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "4471:9:2"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "4482:2:2",
																"type": "",
																"value": "32"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "4467:3:2"
														},
														"nodeType": "YulFunctionCall",
														"src": "4467:18:2"
													}
												],
												"functionName": {
													"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
													"nodeType": "YulIdentifier",
													"src": "4414:43:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "4414:72:2"
											},
											"nodeType": "YulExpressionStatement",
											"src": "4414:72:2"
										}
									]
								},
								"name": "abi_encode_tuple_t_address_payable_t_uint256__to_t_address_t_uint256__fromStack_reversed",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "4243:9:2",
										"type": ""
									},
									{
										"name": "value1",
										"nodeType": "YulTypedName",
										"src": "4255:6:2",
										"type": ""
									},
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "4263:6:2",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "tail",
										"nodeType": "YulTypedName",
										"src": "4274:4:2",
										"type": ""
									}
								],
								"src": "4145:348:2"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "4541:48:2",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "4551:32:2",
											"value": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4576:5:2"
															}
														],
														"functionName": {
															"name": "iszero",
															"nodeType": "YulIdentifier",
															"src": "4569:6:2"
														},
														"nodeType": "YulFunctionCall",
														"src": "4569:13:2"
													}
												],
												"functionName": {
													"name": "iszero",
													"nodeType": "YulIdentifier",
													"src": "4562:6:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "4562:21:2"
											},
											"variableNames": [
												{
													"name": "cleaned",
													"nodeType": "YulIdentifier",
													"src": "4551:7:2"
												}
											]
										}
									]
								},
								"name": "cleanup_t_bool",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "4523:5:2",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "cleaned",
										"nodeType": "YulTypedName",
										"src": "4533:7:2",
										"type": ""
									}
								],
								"src": "4499:90:2"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "4635:76:2",
									"statements": [
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "4689:16:2",
												"statements": [
													{
														"expression": {
															"arguments": [
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "4698:1:2",
																	"type": "",
																	"value": "0"
																},
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "4701:1:2",
																	"type": "",
																	"value": "0"
																}
															],
															"functionName": {
																"name": "revert",
																"nodeType": "YulIdentifier",
																"src": "4691:6:2"
															},
															"nodeType": "YulFunctionCall",
															"src": "4691:12:2"
														},
														"nodeType": "YulExpressionStatement",
														"src": "4691:12:2"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "4658:5:2"
															},
															{
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "4680:5:2"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_bool",
																	"nodeType": "YulIdentifier",
																	"src": "4665:14:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "4665:21:2"
															}
														],
														"functionName": {
															"name": "eq",
															"nodeType": "YulIdentifier",
															"src": "4655:2:2"
														},
														"nodeType": "YulFunctionCall",
														"src": "4655:32:2"
													}
												],
												"functionName": {
													"name": "iszero",
													"nodeType": "YulIdentifier",
													"src": "4648:6:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "4648:40:2"
											},
											"nodeType": "YulIf",
											"src": "4645:60:2"
										}
									]
								},
								"name": "validator_revert_t_bool",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "4628:5:2",
										"type": ""
									}
								],
								"src": "4595:116:2"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "4777:77:2",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "4787:22:2",
											"value": {
												"arguments": [
													{
														"name": "offset",
														"nodeType": "YulIdentifier",
														"src": "4802:6:2"
													}
												],
												"functionName": {
													"name": "mload",
													"nodeType": "YulIdentifier",
													"src": "4796:5:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "4796:13:2"
											},
											"variableNames": [
												{
													"name": "value",
													"nodeType": "YulIdentifier",
													"src": "4787:5:2"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "4842:5:2"
													}
												],
												"functionName": {
													"name": "validator_revert_t_bool",
													"nodeType": "YulIdentifier",
													"src": "4818:23:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "4818:30:2"
											},
											"nodeType": "YulExpressionStatement",
											"src": "4818:30:2"
										}
									]
								},
								"name": "abi_decode_t_bool_fromMemory",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "offset",
										"nodeType": "YulTypedName",
										"src": "4755:6:2",
										"type": ""
									},
									{
										"name": "end",
										"nodeType": "YulTypedName",
										"src": "4763:3:2",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "4771:5:2",
										"type": ""
									}
								],
								"src": "4717:137:2"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "4934:271:2",
									"statements": [
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "4980:83:2",
												"statements": [
													{
														"expression": {
															"arguments": [],
															"functionName": {
																"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																"nodeType": "YulIdentifier",
																"src": "4982:77:2"
															},
															"nodeType": "YulFunctionCall",
															"src": "4982:79:2"
														},
														"nodeType": "YulExpressionStatement",
														"src": "4982:79:2"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "4955:7:2"
															},
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "4964:9:2"
															}
														],
														"functionName": {
															"name": "sub",
															"nodeType": "YulIdentifier",
															"src": "4951:3:2"
														},
														"nodeType": "YulFunctionCall",
														"src": "4951:23:2"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "4976:2:2",
														"type": "",
														"value": "32"
													}
												],
												"functionName": {
													"name": "slt",
													"nodeType": "YulIdentifier",
													"src": "4947:3:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "4947:32:2"
											},
											"nodeType": "YulIf",
											"src": "4944:119:2"
										},
										{
											"nodeType": "YulBlock",
											"src": "5073:125:2",
											"statements": [
												{
													"nodeType": "YulVariableDeclaration",
													"src": "5088:15:2",
													"value": {
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "5102:1:2",
														"type": "",
														"value": "0"
													},
													"variables": [
														{
															"name": "offset",
															"nodeType": "YulTypedName",
															"src": "5092:6:2",
															"type": ""
														}
													]
												},
												{
													"nodeType": "YulAssignment",
													"src": "5117:71:2",
													"value": {
														"arguments": [
															{
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "5160:9:2"
																	},
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "5171:6:2"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "5156:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "5156:22:2"
															},
															{
																"name": "dataEnd",
																"nodeType": "YulIdentifier",
																"src": "5180:7:2"
															}
														],
														"functionName": {
															"name": "abi_decode_t_bool_fromMemory",
															"nodeType": "YulIdentifier",
															"src": "5127:28:2"
														},
														"nodeType": "YulFunctionCall",
														"src": "5127:61:2"
													},
													"variableNames": [
														{
															"name": "value0",
															"nodeType": "YulIdentifier",
															"src": "5117:6:2"
														}
													]
												}
											]
										}
									]
								},
								"name": "abi_decode_tuple_t_bool_fromMemory",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "4904:9:2",
										"type": ""
									},
									{
										"name": "dataEnd",
										"nodeType": "YulTypedName",
										"src": "4915:7:2",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "4927:6:2",
										"type": ""
									}
								],
								"src": "4860:345:2"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "5239:152:2",
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "5256:1:2",
														"type": "",
														"value": "0"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "5259:77:2",
														"type": "",
														"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "5249:6:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "5249:88:2"
											},
											"nodeType": "YulExpressionStatement",
											"src": "5249:88:2"
										},
										{
											"expression": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "5353:1:2",
														"type": "",
														"value": "4"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "5356:4:2",
														"type": "",
														"value": "0x11"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "5346:6:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "5346:15:2"
											},
											"nodeType": "YulExpressionStatement",
											"src": "5346:15:2"
										},
										{
											"expression": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "5377:1:2",
														"type": "",
														"value": "0"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "5380:4:2",
														"type": "",
														"value": "0x24"
													}
												],
												"functionName": {
													"name": "revert",
													"nodeType": "YulIdentifier",
													"src": "5370:6:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "5370:15:2"
											},
											"nodeType": "YulExpressionStatement",
											"src": "5370:15:2"
										}
									]
								},
								"name": "panic_error_0x11",
								"nodeType": "YulFunctionDefinition",
								"src": "5211:180:2"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "5448:51:2",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "5458:34:2",
											"value": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "5483:1:2",
														"type": "",
														"value": "1"
													},
													{
														"name": "value",
														"nodeType": "YulIdentifier",
														"src": "5486:5:2"
													}
												],
												"functionName": {
													"name": "shr",
													"nodeType": "YulIdentifier",
													"src": "5479:3:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "5479:13:2"
											},
											"variableNames": [
												{
													"name": "newValue",
													"nodeType": "YulIdentifier",
													"src": "5458:8:2"
												}
											]
										}
									]
								},
								"name": "shift_right_1_unsigned",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "value",
										"nodeType": "YulTypedName",
										"src": "5429:5:2",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "newValue",
										"nodeType": "YulTypedName",
										"src": "5439:8:2",
										"type": ""
									}
								],
								"src": "5397:102:2"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "5578:775:2",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "5588:15:2",
											"value": {
												"name": "_power",
												"nodeType": "YulIdentifier",
												"src": "5597:6:2"
											},
											"variableNames": [
												{
													"name": "power",
													"nodeType": "YulIdentifier",
													"src": "5588:5:2"
												}
											]
										},
										{
											"nodeType": "YulAssignment",
											"src": "5612:14:2",
											"value": {
												"name": "_base",
												"nodeType": "YulIdentifier",
												"src": "5621:5:2"
											},
											"variableNames": [
												{
													"name": "base",
													"nodeType": "YulIdentifier",
													"src": "5612:4:2"
												}
											]
										},
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "5670:677:2",
												"statements": [
													{
														"body": {
															"nodeType": "YulBlock",
															"src": "5758:22:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [],
																		"functionName": {
																			"name": "panic_error_0x11",
																			"nodeType": "YulIdentifier",
																			"src": "5760:16:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "5760:18:2"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "5760:18:2"
																}
															]
														},
														"condition": {
															"arguments": [
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "5736:4:2"
																},
																{
																	"arguments": [
																		{
																			"name": "max",
																			"nodeType": "YulIdentifier",
																			"src": "5746:3:2"
																		},
																		{
																			"name": "base",
																			"nodeType": "YulIdentifier",
																			"src": "5751:4:2"
																		}
																	],
																	"functionName": {
																		"name": "div",
																		"nodeType": "YulIdentifier",
																		"src": "5742:3:2"
																	},
																	"nodeType": "YulFunctionCall",
																	"src": "5742:14:2"
																}
															],
															"functionName": {
																"name": "gt",
																"nodeType": "YulIdentifier",
																"src": "5733:2:2"
															},
															"nodeType": "YulFunctionCall",
															"src": "5733:24:2"
														},
														"nodeType": "YulIf",
														"src": "5730:50:2"
													},
													{
														"body": {
															"nodeType": "YulBlock",
															"src": "5825:419:2",
															"statements": [
																{
																	"nodeType": "YulAssignment",
																	"src": "6205:25:2",
																	"value": {
																		"arguments": [
																			{
																				"name": "power",
																				"nodeType": "YulIdentifier",
																				"src": "6218:5:2"
																			},
																			{
																				"name": "base",
																				"nodeType": "YulIdentifier",
																				"src": "6225:4:2"
																			}
																		],
																		"functionName": {
																			"name": "mul",
																			"nodeType": "YulIdentifier",
																			"src": "6214:3:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "6214:16:2"
																	},
																	"variableNames": [
																		{
																			"name": "power",
																			"nodeType": "YulIdentifier",
																			"src": "6205:5:2"
																		}
																	]
																}
															]
														},
														"condition": {
															"arguments": [
																{
																	"name": "exponent",
																	"nodeType": "YulIdentifier",
																	"src": "5800:8:2"
																},
																{
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "5810:1:2",
																	"type": "",
																	"value": "1"
																}
															],
															"functionName": {
																"name": "and",
																"nodeType": "YulIdentifier",
																"src": "5796:3:2"
															},
															"nodeType": "YulFunctionCall",
															"src": "5796:16:2"
														},
														"nodeType": "YulIf",
														"src": "5793:451:2"
													},
													{
														"nodeType": "YulAssignment",
														"src": "6257:23:2",
														"value": {
															"arguments": [
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "6269:4:2"
																},
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "6275:4:2"
																}
															],
															"functionName": {
																"name": "mul",
																"nodeType": "YulIdentifier",
																"src": "6265:3:2"
															},
															"nodeType": "YulFunctionCall",
															"src": "6265:15:2"
														},
														"variableNames": [
															{
																"name": "base",
																"nodeType": "YulIdentifier",
																"src": "6257:4:2"
															}
														]
													},
													{
														"nodeType": "YulAssignment",
														"src": "6293:44:2",
														"value": {
															"arguments": [
																{
																	"name": "exponent",
																	"nodeType": "YulIdentifier",
																	"src": "6328:8:2"
																}
															],
															"functionName": {
																"name": "shift_right_1_unsigned",
																"nodeType": "YulIdentifier",
																"src": "6305:22:2"
															},
															"nodeType": "YulFunctionCall",
															"src": "6305:32:2"
														},
														"variableNames": [
															{
																"name": "exponent",
																"nodeType": "YulIdentifier",
																"src": "6293:8:2"
															}
														]
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"name": "exponent",
														"nodeType": "YulIdentifier",
														"src": "5646:8:2"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "5656:1:2",
														"type": "",
														"value": "1"
													}
												],
												"functionName": {
													"name": "gt",
													"nodeType": "YulIdentifier",
													"src": "5643:2:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "5643:15:2"
											},
											"nodeType": "YulForLoop",
											"post": {
												"nodeType": "YulBlock",
												"src": "5659:2:2",
												"statements": []
											},
											"pre": {
												"nodeType": "YulBlock",
												"src": "5639:3:2",
												"statements": []
											},
											"src": "5635:712:2"
										}
									]
								},
								"name": "checked_exp_helper",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "_power",
										"nodeType": "YulTypedName",
										"src": "5533:6:2",
										"type": ""
									},
									{
										"name": "_base",
										"nodeType": "YulTypedName",
										"src": "5541:5:2",
										"type": ""
									},
									{
										"name": "exponent",
										"nodeType": "YulTypedName",
										"src": "5548:8:2",
										"type": ""
									},
									{
										"name": "max",
										"nodeType": "YulTypedName",
										"src": "5558:3:2",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "power",
										"nodeType": "YulTypedName",
										"src": "5566:5:2",
										"type": ""
									},
									{
										"name": "base",
										"nodeType": "YulTypedName",
										"src": "5573:4:2",
										"type": ""
									}
								],
								"src": "5505:848:2"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "6419:1013:2",
									"statements": [
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "6614:20:2",
												"statements": [
													{
														"nodeType": "YulAssignment",
														"src": "6616:10:2",
														"value": {
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "6625:1:2",
															"type": "",
															"value": "1"
														},
														"variableNames": [
															{
																"name": "power",
																"nodeType": "YulIdentifier",
																"src": "6616:5:2"
															}
														]
													},
													{
														"nodeType": "YulLeave",
														"src": "6627:5:2"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"name": "exponent",
														"nodeType": "YulIdentifier",
														"src": "6604:8:2"
													}
												],
												"functionName": {
													"name": "iszero",
													"nodeType": "YulIdentifier",
													"src": "6597:6:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "6597:16:2"
											},
											"nodeType": "YulIf",
											"src": "6594:40:2"
										},
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "6659:20:2",
												"statements": [
													{
														"nodeType": "YulAssignment",
														"src": "6661:10:2",
														"value": {
															"kind": "number",
															"nodeType": "YulLiteral",
															"src": "6670:1:2",
															"type": "",
															"value": "0"
														},
														"variableNames": [
															{
																"name": "power",
																"nodeType": "YulIdentifier",
																"src": "6661:5:2"
															}
														]
													},
													{
														"nodeType": "YulLeave",
														"src": "6672:5:2"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"name": "base",
														"nodeType": "YulIdentifier",
														"src": "6653:4:2"
													}
												],
												"functionName": {
													"name": "iszero",
													"nodeType": "YulIdentifier",
													"src": "6646:6:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "6646:12:2"
											},
											"nodeType": "YulIf",
											"src": "6643:36:2"
										},
										{
											"cases": [
												{
													"body": {
														"nodeType": "YulBlock",
														"src": "6789:20:2",
														"statements": [
															{
																"nodeType": "YulAssignment",
																"src": "6791:10:2",
																"value": {
																	"kind": "number",
																	"nodeType": "YulLiteral",
																	"src": "6800:1:2",
																	"type": "",
																	"value": "1"
																},
																"variableNames": [
																	{
																		"name": "power",
																		"nodeType": "YulIdentifier",
																		"src": "6791:5:2"
																	}
																]
															},
															{
																"nodeType": "YulLeave",
																"src": "6802:5:2"
															}
														]
													},
													"nodeType": "YulCase",
													"src": "6782:27:2",
													"value": {
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "6787:1:2",
														"type": "",
														"value": "1"
													}
												},
												{
													"body": {
														"nodeType": "YulBlock",
														"src": "6833:176:2",
														"statements": [
															{
																"body": {
																	"nodeType": "YulBlock",
																	"src": "6868:22:2",
																	"statements": [
																		{
																			"expression": {
																				"arguments": [],
																				"functionName": {
																					"name": "panic_error_0x11",
																					"nodeType": "YulIdentifier",
																					"src": "6870:16:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6870:18:2"
																			},
																			"nodeType": "YulExpressionStatement",
																			"src": "6870:18:2"
																		}
																	]
																},
																"condition": {
																	"arguments": [
																		{
																			"name": "exponent",
																			"nodeType": "YulIdentifier",
																			"src": "6853:8:2"
																		},
																		{
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "6863:3:2",
																			"type": "",
																			"value": "255"
																		}
																	],
																	"functionName": {
																		"name": "gt",
																		"nodeType": "YulIdentifier",
																		"src": "6850:2:2"
																	},
																	"nodeType": "YulFunctionCall",
																	"src": "6850:17:2"
																},
																"nodeType": "YulIf",
																"src": "6847:43:2"
															},
															{
																"nodeType": "YulAssignment",
																"src": "6903:25:2",
																"value": {
																	"arguments": [
																		{
																			"kind": "number",
																			"nodeType": "YulLiteral",
																			"src": "6916:1:2",
																			"type": "",
																			"value": "2"
																		},
																		{
																			"name": "exponent",
																			"nodeType": "YulIdentifier",
																			"src": "6919:8:2"
																		}
																	],
																	"functionName": {
																		"name": "exp",
																		"nodeType": "YulIdentifier",
																		"src": "6912:3:2"
																	},
																	"nodeType": "YulFunctionCall",
																	"src": "6912:16:2"
																},
																"variableNames": [
																	{
																		"name": "power",
																		"nodeType": "YulIdentifier",
																		"src": "6903:5:2"
																	}
																]
															},
															{
																"body": {
																	"nodeType": "YulBlock",
																	"src": "6959:22:2",
																	"statements": [
																		{
																			"expression": {
																				"arguments": [],
																				"functionName": {
																					"name": "panic_error_0x11",
																					"nodeType": "YulIdentifier",
																					"src": "6961:16:2"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "6961:18:2"
																			},
																			"nodeType": "YulExpressionStatement",
																			"src": "6961:18:2"
																		}
																	]
																},
																"condition": {
																	"arguments": [
																		{
																			"name": "power",
																			"nodeType": "YulIdentifier",
																			"src": "6947:5:2"
																		},
																		{
																			"name": "max",
																			"nodeType": "YulIdentifier",
																			"src": "6954:3:2"
																		}
																	],
																	"functionName": {
																		"name": "gt",
																		"nodeType": "YulIdentifier",
																		"src": "6944:2:2"
																	},
																	"nodeType": "YulFunctionCall",
																	"src": "6944:14:2"
																},
																"nodeType": "YulIf",
																"src": "6941:40:2"
															},
															{
																"nodeType": "YulLeave",
																"src": "6994:5:2"
															}
														]
													},
													"nodeType": "YulCase",
													"src": "6818:191:2",
													"value": {
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "6823:1:2",
														"type": "",
														"value": "2"
													}
												}
											],
											"expression": {
												"name": "base",
												"nodeType": "YulIdentifier",
												"src": "6739:4:2"
											},
											"nodeType": "YulSwitch",
											"src": "6732:277:2"
										},
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "7141:123:2",
												"statements": [
													{
														"nodeType": "YulAssignment",
														"src": "7155:28:2",
														"value": {
															"arguments": [
																{
																	"name": "base",
																	"nodeType": "YulIdentifier",
																	"src": "7168:4:2"
																},
																{
																	"name": "exponent",
																	"nodeType": "YulIdentifier",
																	"src": "7174:8:2"
																}
															],
															"functionName": {
																"name": "exp",
																"nodeType": "YulIdentifier",
																"src": "7164:3:2"
															},
															"nodeType": "YulFunctionCall",
															"src": "7164:19:2"
														},
														"variableNames": [
															{
																"name": "power",
																"nodeType": "YulIdentifier",
																"src": "7155:5:2"
															}
														]
													},
													{
														"body": {
															"nodeType": "YulBlock",
															"src": "7214:22:2",
															"statements": [
																{
																	"expression": {
																		"arguments": [],
																		"functionName": {
																			"name": "panic_error_0x11",
																			"nodeType": "YulIdentifier",
																			"src": "7216:16:2"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "7216:18:2"
																	},
																	"nodeType": "YulExpressionStatement",
																	"src": "7216:18:2"
																}
															]
														},
														"condition": {
															"arguments": [
																{
																	"name": "power",
																	"nodeType": "YulIdentifier",
																	"src": "7202:5:2"
																},
																{
																	"name": "max",
																	"nodeType": "YulIdentifier",
																	"src": "7209:3:2"
																}
															],
															"functionName": {
																"name": "gt",
																"nodeType": "YulIdentifier",
																"src": "7199:2:2"
															},
															"nodeType": "YulFunctionCall",
															"src": "7199:14:2"
														},
														"nodeType": "YulIf",
														"src": "7196:40:2"
													},
													{
														"nodeType": "YulLeave",
														"src": "7249:5:2"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "7044:4:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7050:2:2",
																		"type": "",
																		"value": "11"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "7041:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7041:12:2"
															},
															{
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "7058:8:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7068:2:2",
																		"type": "",
																		"value": "78"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "7055:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7055:16:2"
															}
														],
														"functionName": {
															"name": "and",
															"nodeType": "YulIdentifier",
															"src": "7037:3:2"
														},
														"nodeType": "YulFunctionCall",
														"src": "7037:35:2"
													},
													{
														"arguments": [
															{
																"arguments": [
																	{
																		"name": "base",
																		"nodeType": "YulIdentifier",
																		"src": "7093:4:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7099:3:2",
																		"type": "",
																		"value": "307"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "7090:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7090:13:2"
															},
															{
																"arguments": [
																	{
																		"name": "exponent",
																		"nodeType": "YulIdentifier",
																		"src": "7108:8:2"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "7118:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nodeType": "YulIdentifier",
																	"src": "7105:2:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "7105:16:2"
															}
														],
														"functionName": {
															"name": "and",
															"nodeType": "YulIdentifier",
															"src": "7086:3:2"
														},
														"nodeType": "YulFunctionCall",
														"src": "7086:36:2"
													}
												],
												"functionName": {
													"name": "or",
													"nodeType": "YulIdentifier",
													"src": "7021:2:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "7021:111:2"
											},
											"nodeType": "YulIf",
											"src": "7018:246:2"
										},
										{
											"nodeType": "YulAssignment",
											"src": "7274:57:2",
											"value": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "7308:1:2",
														"type": "",
														"value": "1"
													},
													{
														"name": "base",
														"nodeType": "YulIdentifier",
														"src": "7311:4:2"
													},
													{
														"name": "exponent",
														"nodeType": "YulIdentifier",
														"src": "7317:8:2"
													},
													{
														"name": "max",
														"nodeType": "YulIdentifier",
														"src": "7327:3:2"
													}
												],
												"functionName": {
													"name": "checked_exp_helper",
													"nodeType": "YulIdentifier",
													"src": "7289:18:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "7289:42:2"
											},
											"variableNames": [
												{
													"name": "power",
													"nodeType": "YulIdentifier",
													"src": "7274:5:2"
												},
												{
													"name": "base",
													"nodeType": "YulIdentifier",
													"src": "7281:4:2"
												}
											]
										},
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "7370:22:2",
												"statements": [
													{
														"expression": {
															"arguments": [],
															"functionName": {
																"name": "panic_error_0x11",
																"nodeType": "YulIdentifier",
																"src": "7372:16:2"
															},
															"nodeType": "YulFunctionCall",
															"src": "7372:18:2"
														},
														"nodeType": "YulExpressionStatement",
														"src": "7372:18:2"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"name": "power",
														"nodeType": "YulIdentifier",
														"src": "7347:5:2"
													},
													{
														"arguments": [
															{
																"name": "max",
																"nodeType": "YulIdentifier",
																"src": "7358:3:2"
															},
															{
																"name": "base",
																"nodeType": "YulIdentifier",
																"src": "7363:4:2"
															}
														],
														"functionName": {
															"name": "div",
															"nodeType": "YulIdentifier",
															"src": "7354:3:2"
														},
														"nodeType": "YulFunctionCall",
														"src": "7354:14:2"
													}
												],
												"functionName": {
													"name": "gt",
													"nodeType": "YulIdentifier",
													"src": "7344:2:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "7344:25:2"
											},
											"nodeType": "YulIf",
											"src": "7341:51:2"
										},
										{
											"nodeType": "YulAssignment",
											"src": "7401:25:2",
											"value": {
												"arguments": [
													{
														"name": "power",
														"nodeType": "YulIdentifier",
														"src": "7414:5:2"
													},
													{
														"name": "base",
														"nodeType": "YulIdentifier",
														"src": "7421:4:2"
													}
												],
												"functionName": {
													"name": "mul",
													"nodeType": "YulIdentifier",
													"src": "7410:3:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "7410:16:2"
											},
											"variableNames": [
												{
													"name": "power",
													"nodeType": "YulIdentifier",
													"src": "7401:5:2"
												}
											]
										}
									]
								},
								"name": "checked_exp_unsigned",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "base",
										"nodeType": "YulTypedName",
										"src": "6389:4:2",
										"type": ""
									},
									{
										"name": "exponent",
										"nodeType": "YulTypedName",
										"src": "6395:8:2",
										"type": ""
									},
									{
										"name": "max",
										"nodeType": "YulTypedName",
										"src": "6405:3:2",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "power",
										"nodeType": "YulTypedName",
										"src": "6413:5:2",
										"type": ""
									}
								],
								"src": "6359:1073:2"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "7502:217:2",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "7512:31:2",
											"value": {
												"arguments": [
													{
														"name": "base",
														"nodeType": "YulIdentifier",
														"src": "7538:4:2"
													}
												],
												"functionName": {
													"name": "cleanup_t_uint256",
													"nodeType": "YulIdentifier",
													"src": "7520:17:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "7520:23:2"
											},
											"variableNames": [
												{
													"name": "base",
													"nodeType": "YulIdentifier",
													"src": "7512:4:2"
												}
											]
										},
										{
											"nodeType": "YulAssignment",
											"src": "7552:37:2",
											"value": {
												"arguments": [
													{
														"name": "exponent",
														"nodeType": "YulIdentifier",
														"src": "7580:8:2"
													}
												],
												"functionName": {
													"name": "cleanup_t_uint8",
													"nodeType": "YulIdentifier",
													"src": "7564:15:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "7564:25:2"
											},
											"variableNames": [
												{
													"name": "exponent",
													"nodeType": "YulIdentifier",
													"src": "7552:8:2"
												}
											]
										},
										{
											"nodeType": "YulAssignment",
											"src": "7599:113:2",
											"value": {
												"arguments": [
													{
														"name": "base",
														"nodeType": "YulIdentifier",
														"src": "7629:4:2"
													},
													{
														"name": "exponent",
														"nodeType": "YulIdentifier",
														"src": "7635:8:2"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "7645:66:2",
														"type": "",
														"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
													}
												],
												"functionName": {
													"name": "checked_exp_unsigned",
													"nodeType": "YulIdentifier",
													"src": "7608:20:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "7608:104:2"
											},
											"variableNames": [
												{
													"name": "power",
													"nodeType": "YulIdentifier",
													"src": "7599:5:2"
												}
											]
										}
									]
								},
								"name": "checked_exp_t_uint256_t_uint8",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "base",
										"nodeType": "YulTypedName",
										"src": "7477:4:2",
										"type": ""
									},
									{
										"name": "exponent",
										"nodeType": "YulTypedName",
										"src": "7483:8:2",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "power",
										"nodeType": "YulTypedName",
										"src": "7496:5:2",
										"type": ""
									}
								],
								"src": "7438:281:2"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "7753:152:2",
									"statements": [
										{
											"expression": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "7770:1:2",
														"type": "",
														"value": "0"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "7773:77:2",
														"type": "",
														"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "7763:6:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "7763:88:2"
											},
											"nodeType": "YulExpressionStatement",
											"src": "7763:88:2"
										},
										{
											"expression": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "7867:1:2",
														"type": "",
														"value": "4"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "7870:4:2",
														"type": "",
														"value": "0x12"
													}
												],
												"functionName": {
													"name": "mstore",
													"nodeType": "YulIdentifier",
													"src": "7860:6:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "7860:15:2"
											},
											"nodeType": "YulExpressionStatement",
											"src": "7860:15:2"
										},
										{
											"expression": {
												"arguments": [
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "7891:1:2",
														"type": "",
														"value": "0"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "7894:4:2",
														"type": "",
														"value": "0x24"
													}
												],
												"functionName": {
													"name": "revert",
													"nodeType": "YulIdentifier",
													"src": "7884:6:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "7884:15:2"
											},
											"nodeType": "YulExpressionStatement",
											"src": "7884:15:2"
										}
									]
								},
								"name": "panic_error_0x12",
								"nodeType": "YulFunctionDefinition",
								"src": "7725:180:2"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "7953:143:2",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "7963:25:2",
											"value": {
												"arguments": [
													{
														"name": "x",
														"nodeType": "YulIdentifier",
														"src": "7986:1:2"
													}
												],
												"functionName": {
													"name": "cleanup_t_uint256",
													"nodeType": "YulIdentifier",
													"src": "7968:17:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "7968:20:2"
											},
											"variableNames": [
												{
													"name": "x",
													"nodeType": "YulIdentifier",
													"src": "7963:1:2"
												}
											]
										},
										{
											"nodeType": "YulAssignment",
											"src": "7997:25:2",
											"value": {
												"arguments": [
													{
														"name": "y",
														"nodeType": "YulIdentifier",
														"src": "8020:1:2"
													}
												],
												"functionName": {
													"name": "cleanup_t_uint256",
													"nodeType": "YulIdentifier",
													"src": "8002:17:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "8002:20:2"
											},
											"variableNames": [
												{
													"name": "y",
													"nodeType": "YulIdentifier",
													"src": "7997:1:2"
												}
											]
										},
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "8044:22:2",
												"statements": [
													{
														"expression": {
															"arguments": [],
															"functionName": {
																"name": "panic_error_0x12",
																"nodeType": "YulIdentifier",
																"src": "8046:16:2"
															},
															"nodeType": "YulFunctionCall",
															"src": "8046:18:2"
														},
														"nodeType": "YulExpressionStatement",
														"src": "8046:18:2"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"name": "y",
														"nodeType": "YulIdentifier",
														"src": "8041:1:2"
													}
												],
												"functionName": {
													"name": "iszero",
													"nodeType": "YulIdentifier",
													"src": "8034:6:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "8034:9:2"
											},
											"nodeType": "YulIf",
											"src": "8031:35:2"
										},
										{
											"nodeType": "YulAssignment",
											"src": "8076:14:2",
											"value": {
												"arguments": [
													{
														"name": "x",
														"nodeType": "YulIdentifier",
														"src": "8085:1:2"
													},
													{
														"name": "y",
														"nodeType": "YulIdentifier",
														"src": "8088:1:2"
													}
												],
												"functionName": {
													"name": "div",
													"nodeType": "YulIdentifier",
													"src": "8081:3:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "8081:9:2"
											},
											"variableNames": [
												{
													"name": "r",
													"nodeType": "YulIdentifier",
													"src": "8076:1:2"
												}
											]
										}
									]
								},
								"name": "checked_div_t_uint256",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "x",
										"nodeType": "YulTypedName",
										"src": "7942:1:2",
										"type": ""
									},
									{
										"name": "y",
										"nodeType": "YulTypedName",
										"src": "7945:1:2",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "r",
										"nodeType": "YulTypedName",
										"src": "7951:1:2",
										"type": ""
									}
								],
								"src": "7911:185:2"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "8228:206:2",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "8238:26:2",
											"value": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "8250:9:2"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "8261:2:2",
														"type": "",
														"value": "64"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "8246:3:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "8246:18:2"
											},
											"variableNames": [
												{
													"name": "tail",
													"nodeType": "YulIdentifier",
													"src": "8238:4:2"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value0",
														"nodeType": "YulIdentifier",
														"src": "8318:6:2"
													},
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "8331:9:2"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "8342:1:2",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "8327:3:2"
														},
														"nodeType": "YulFunctionCall",
														"src": "8327:17:2"
													}
												],
												"functionName": {
													"name": "abi_encode_t_address_to_t_address_fromStack",
													"nodeType": "YulIdentifier",
													"src": "8274:43:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "8274:71:2"
											},
											"nodeType": "YulExpressionStatement",
											"src": "8274:71:2"
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value1",
														"nodeType": "YulIdentifier",
														"src": "8399:6:2"
													},
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "8412:9:2"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "8423:2:2",
																"type": "",
																"value": "32"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "8408:3:2"
														},
														"nodeType": "YulFunctionCall",
														"src": "8408:18:2"
													}
												],
												"functionName": {
													"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
													"nodeType": "YulIdentifier",
													"src": "8355:43:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "8355:72:2"
											},
											"nodeType": "YulExpressionStatement",
											"src": "8355:72:2"
										}
									]
								},
								"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "8192:9:2",
										"type": ""
									},
									{
										"name": "value1",
										"nodeType": "YulTypedName",
										"src": "8204:6:2",
										"type": ""
									},
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "8212:6:2",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "tail",
										"nodeType": "YulTypedName",
										"src": "8223:4:2",
										"type": ""
									}
								],
								"src": "8102:332:2"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "8484:261:2",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "8494:25:2",
											"value": {
												"arguments": [
													{
														"name": "x",
														"nodeType": "YulIdentifier",
														"src": "8517:1:2"
													}
												],
												"functionName": {
													"name": "cleanup_t_uint256",
													"nodeType": "YulIdentifier",
													"src": "8499:17:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "8499:20:2"
											},
											"variableNames": [
												{
													"name": "x",
													"nodeType": "YulIdentifier",
													"src": "8494:1:2"
												}
											]
										},
										{
											"nodeType": "YulAssignment",
											"src": "8528:25:2",
											"value": {
												"arguments": [
													{
														"name": "y",
														"nodeType": "YulIdentifier",
														"src": "8551:1:2"
													}
												],
												"functionName": {
													"name": "cleanup_t_uint256",
													"nodeType": "YulIdentifier",
													"src": "8533:17:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "8533:20:2"
											},
											"variableNames": [
												{
													"name": "y",
													"nodeType": "YulIdentifier",
													"src": "8528:1:2"
												}
											]
										},
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "8691:22:2",
												"statements": [
													{
														"expression": {
															"arguments": [],
															"functionName": {
																"name": "panic_error_0x11",
																"nodeType": "YulIdentifier",
																"src": "8693:16:2"
															},
															"nodeType": "YulFunctionCall",
															"src": "8693:18:2"
														},
														"nodeType": "YulExpressionStatement",
														"src": "8693:18:2"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"name": "x",
														"nodeType": "YulIdentifier",
														"src": "8612:1:2"
													},
													{
														"arguments": [
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "8619:66:2",
																"type": "",
																"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
															},
															{
																"name": "y",
																"nodeType": "YulIdentifier",
																"src": "8687:1:2"
															}
														],
														"functionName": {
															"name": "sub",
															"nodeType": "YulIdentifier",
															"src": "8615:3:2"
														},
														"nodeType": "YulFunctionCall",
														"src": "8615:74:2"
													}
												],
												"functionName": {
													"name": "gt",
													"nodeType": "YulIdentifier",
													"src": "8609:2:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "8609:81:2"
											},
											"nodeType": "YulIf",
											"src": "8606:107:2"
										},
										{
											"nodeType": "YulAssignment",
											"src": "8723:16:2",
											"value": {
												"arguments": [
													{
														"name": "x",
														"nodeType": "YulIdentifier",
														"src": "8734:1:2"
													},
													{
														"name": "y",
														"nodeType": "YulIdentifier",
														"src": "8737:1:2"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "8730:3:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "8730:9:2"
											},
											"variableNames": [
												{
													"name": "sum",
													"nodeType": "YulIdentifier",
													"src": "8723:3:2"
												}
											]
										}
									]
								},
								"name": "checked_add_t_uint256",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "x",
										"nodeType": "YulTypedName",
										"src": "8471:1:2",
										"type": ""
									},
									{
										"name": "y",
										"nodeType": "YulTypedName",
										"src": "8474:1:2",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "sum",
										"nodeType": "YulTypedName",
										"src": "8480:3:2",
										"type": ""
									}
								],
								"src": "8440:305:2"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "8933:371:2",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "8943:27:2",
											"value": {
												"arguments": [
													{
														"name": "headStart",
														"nodeType": "YulIdentifier",
														"src": "8955:9:2"
													},
													{
														"kind": "number",
														"nodeType": "YulLiteral",
														"src": "8966:3:2",
														"type": "",
														"value": "128"
													}
												],
												"functionName": {
													"name": "add",
													"nodeType": "YulIdentifier",
													"src": "8951:3:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "8951:19:2"
											},
											"variableNames": [
												{
													"name": "tail",
													"nodeType": "YulIdentifier",
													"src": "8943:4:2"
												}
											]
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value0",
														"nodeType": "YulIdentifier",
														"src": "9024:6:2"
													},
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "9037:9:2"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "9048:1:2",
																"type": "",
																"value": "0"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "9033:3:2"
														},
														"nodeType": "YulFunctionCall",
														"src": "9033:17:2"
													}
												],
												"functionName": {
													"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
													"nodeType": "YulIdentifier",
													"src": "8980:43:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "8980:71:2"
											},
											"nodeType": "YulExpressionStatement",
											"src": "8980:71:2"
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value1",
														"nodeType": "YulIdentifier",
														"src": "9105:6:2"
													},
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "9118:9:2"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "9129:2:2",
																"type": "",
																"value": "32"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "9114:3:2"
														},
														"nodeType": "YulFunctionCall",
														"src": "9114:18:2"
													}
												],
												"functionName": {
													"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
													"nodeType": "YulIdentifier",
													"src": "9061:43:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "9061:72:2"
											},
											"nodeType": "YulExpressionStatement",
											"src": "9061:72:2"
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value2",
														"nodeType": "YulIdentifier",
														"src": "9187:6:2"
													},
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "9200:9:2"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "9211:2:2",
																"type": "",
																"value": "64"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "9196:3:2"
														},
														"nodeType": "YulFunctionCall",
														"src": "9196:18:2"
													}
												],
												"functionName": {
													"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
													"nodeType": "YulIdentifier",
													"src": "9143:43:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "9143:72:2"
											},
											"nodeType": "YulExpressionStatement",
											"src": "9143:72:2"
										},
										{
											"expression": {
												"arguments": [
													{
														"name": "value3",
														"nodeType": "YulIdentifier",
														"src": "9269:6:2"
													},
													{
														"arguments": [
															{
																"name": "headStart",
																"nodeType": "YulIdentifier",
																"src": "9282:9:2"
															},
															{
																"kind": "number",
																"nodeType": "YulLiteral",
																"src": "9293:2:2",
																"type": "",
																"value": "96"
															}
														],
														"functionName": {
															"name": "add",
															"nodeType": "YulIdentifier",
															"src": "9278:3:2"
														},
														"nodeType": "YulFunctionCall",
														"src": "9278:18:2"
													}
												],
												"functionName": {
													"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
													"nodeType": "YulIdentifier",
													"src": "9225:43:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "9225:72:2"
											},
											"nodeType": "YulExpressionStatement",
											"src": "9225:72:2"
										}
									]
								},
								"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "headStart",
										"nodeType": "YulTypedName",
										"src": "8881:9:2",
										"type": ""
									},
									{
										"name": "value3",
										"nodeType": "YulTypedName",
										"src": "8893:6:2",
										"type": ""
									},
									{
										"name": "value2",
										"nodeType": "YulTypedName",
										"src": "8901:6:2",
										"type": ""
									},
									{
										"name": "value1",
										"nodeType": "YulTypedName",
										"src": "8909:6:2",
										"type": ""
									},
									{
										"name": "value0",
										"nodeType": "YulTypedName",
										"src": "8917:6:2",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "tail",
										"nodeType": "YulTypedName",
										"src": "8928:4:2",
										"type": ""
									}
								],
								"src": "8751:553:2"
							},
							{
								"body": {
									"nodeType": "YulBlock",
									"src": "9358:300:2",
									"statements": [
										{
											"nodeType": "YulAssignment",
											"src": "9368:25:2",
											"value": {
												"arguments": [
													{
														"name": "x",
														"nodeType": "YulIdentifier",
														"src": "9391:1:2"
													}
												],
												"functionName": {
													"name": "cleanup_t_uint256",
													"nodeType": "YulIdentifier",
													"src": "9373:17:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "9373:20:2"
											},
											"variableNames": [
												{
													"name": "x",
													"nodeType": "YulIdentifier",
													"src": "9368:1:2"
												}
											]
										},
										{
											"nodeType": "YulAssignment",
											"src": "9402:25:2",
											"value": {
												"arguments": [
													{
														"name": "y",
														"nodeType": "YulIdentifier",
														"src": "9425:1:2"
													}
												],
												"functionName": {
													"name": "cleanup_t_uint256",
													"nodeType": "YulIdentifier",
													"src": "9407:17:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "9407:20:2"
											},
											"variableNames": [
												{
													"name": "y",
													"nodeType": "YulIdentifier",
													"src": "9402:1:2"
												}
											]
										},
										{
											"body": {
												"nodeType": "YulBlock",
												"src": "9600:22:2",
												"statements": [
													{
														"expression": {
															"arguments": [],
															"functionName": {
																"name": "panic_error_0x11",
																"nodeType": "YulIdentifier",
																"src": "9602:16:2"
															},
															"nodeType": "YulFunctionCall",
															"src": "9602:18:2"
														},
														"nodeType": "YulExpressionStatement",
														"src": "9602:18:2"
													}
												]
											},
											"condition": {
												"arguments": [
													{
														"arguments": [
															{
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9512:1:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "9505:6:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9505:9:2"
															}
														],
														"functionName": {
															"name": "iszero",
															"nodeType": "YulIdentifier",
															"src": "9498:6:2"
														},
														"nodeType": "YulFunctionCall",
														"src": "9498:17:2"
													},
													{
														"arguments": [
															{
																"name": "y",
																"nodeType": "YulIdentifier",
																"src": "9520:1:2"
															},
															{
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "9527:66:2",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																	},
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "9595:1:2"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "9523:3:2"
																},
																"nodeType": "YulFunctionCall",
																"src": "9523:74:2"
															}
														],
														"functionName": {
															"name": "gt",
															"nodeType": "YulIdentifier",
															"src": "9517:2:2"
														},
														"nodeType": "YulFunctionCall",
														"src": "9517:81:2"
													}
												],
												"functionName": {
													"name": "and",
													"nodeType": "YulIdentifier",
													"src": "9494:3:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "9494:105:2"
											},
											"nodeType": "YulIf",
											"src": "9491:131:2"
										},
										{
											"nodeType": "YulAssignment",
											"src": "9632:20:2",
											"value": {
												"arguments": [
													{
														"name": "x",
														"nodeType": "YulIdentifier",
														"src": "9647:1:2"
													},
													{
														"name": "y",
														"nodeType": "YulIdentifier",
														"src": "9650:1:2"
													}
												],
												"functionName": {
													"name": "mul",
													"nodeType": "YulIdentifier",
													"src": "9643:3:2"
												},
												"nodeType": "YulFunctionCall",
												"src": "9643:9:2"
											},
											"variableNames": [
												{
													"name": "product",
													"nodeType": "YulIdentifier",
													"src": "9632:7:2"
												}
											]
										}
									]
								},
								"name": "checked_mul_t_uint256",
								"nodeType": "YulFunctionDefinition",
								"parameters": [
									{
										"name": "x",
										"nodeType": "YulTypedName",
										"src": "9341:1:2",
										"type": ""
									},
									{
										"name": "y",
										"nodeType": "YulTypedName",
										"src": "9344:1:2",
										"type": ""
									}
								],
								"returnVariables": [
									{
										"name": "product",
										"nodeType": "YulTypedName",
										"src": "9350:7:2",
										"type": ""
									}
								],
								"src": "9310:348:2"
							}
						]
					},
					"contents": "{\n\n    function cleanup_t_uint8(value) -> cleaned {\n        cleaned := and(value, 0xff)\n    }\n\n    function abi_encode_t_uint8_to_t_uint8_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint8(value))\n    }\n\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint8_to_t_uint8_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint160_to_t_uint160(value) -> converted {\n        converted := cleanup_t_uint160(identity(cleanup_t_uint160(value)))\n    }\n\n    function convert_t_uint160_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_uint160(value)\n    }\n\n    function convert_t_contract$_ChocolateCoin2_$960_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_contract$_ChocolateCoin2_$960_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_contract$_ChocolateCoin2_$960_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_contract$_ChocolateCoin2_$960__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_contract$_ChocolateCoin2_$960_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function convert_t_address_payable_to_t_address(value) -> converted {\n        converted := convert_t_uint160_to_t_address(value)\n    }\n\n    function abi_encode_t_address_payable_to_t_address_fromStack(value, pos) {\n        mstore(pos, convert_t_address_payable_to_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address_payable_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_payable_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function shift_right_1_unsigned(value) -> newValue {\n        newValue :=\n\n        shr(1, value)\n\n    }\n\n    function checked_exp_helper(_power, _base, exponent, max) -> power, base {\n        power := _power\n        base  := _base\n        for { } gt(exponent, 1) {}\n        {\n            // overflow check for base * base\n            if gt(base, div(max, base)) { panic_error_0x11() }\n            if and(exponent, 1)\n            {\n                // No checks for power := mul(power, base) needed, because the check\n                // for base * base above is sufficient, since:\n                // |power| <= base (proof by induction) and thus:\n                // |power * base| <= base * base <= max <= |min| (for signed)\n                // (this is equally true for signed and unsigned exp)\n                power := mul(power, base)\n            }\n            base := mul(base, base)\n            exponent := shift_right_1_unsigned(exponent)\n        }\n    }\n\n    function checked_exp_unsigned(base, exponent, max) -> power {\n        // This function currently cannot be inlined because of the\n        // \"leave\" statements. We have to improve the optimizer.\n\n        // Note that 0**0 == 1\n        if iszero(exponent) { power := 1 leave }\n        if iszero(base) { power := 0 leave }\n\n        // Specializations for small bases\n        switch base\n        // 0 is handled above\n        case 1 { power := 1 leave }\n        case 2\n        {\n            if gt(exponent, 255) { panic_error_0x11() }\n            power := exp(2, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n        if or(\n            and(lt(base, 11), lt(exponent, 78)),\n            and(lt(base, 307), lt(exponent, 32))\n        )\n        {\n            power := exp(base, exponent)\n            if gt(power, max) { panic_error_0x11() }\n            leave\n        }\n\n        power, base := checked_exp_helper(1, base, exponent, max)\n\n        if gt(power, div(max, base)) { panic_error_0x11() }\n        power := mul(power, base)\n    }\n\n    function checked_exp_t_uint256_t_uint8(base, exponent) -> power {\n        base := cleanup_t_uint256(base)\n        exponent := cleanup_t_uint8(exponent)\n\n        power := checked_exp_unsigned(base, exponent, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart , value1, value0) -> tail {\n        tail := add(headStart, 64)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value1,  add(headStart, 32))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value2,  add(headStart, 64))\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x != 0 and y > (maxValue / x)\n        if and(iszero(iszero(x)), gt(y, div(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, x))) { panic_error_0x11() }\n\n        product := mul(x, y)\n    }\n\n}\n",
					"id": 2,
					"language": "Yul",
					"name": "#utility.yul"
				}
			],
			"immutableReferences": {},
			"linkReferences": {},
			"object": "6080604052600436106100705760003560e01c8063658d4e4f1161004e578063658d4e4f146100ce578063b02a668e146100f9578063c79bf7ca14610124578063fe4681961461014f57610070565b8063313ce56714610075578063380d831b146100a05780633ccfd60b146100b7575b600080fd5b34801561008157600080fd5b5061008a61016b565b60405161009791906106ed565b60405180910390f35b3480156100ac57600080fd5b506100b5610170565b005b3480156100c357600080fd5b506100cc61039b565b005b3480156100da57600080fd5b506100e3610460565b6040516100f09190610787565b60405180910390f35b34801561010557600080fd5b5061010e610486565b60405161011b91906107bb565b60405180910390f35b34801561013057600080fd5b50610139610492565b60405161014691906107bb565b60405180910390f35b61016960048036038101906101649190610807565b610498565b005b601281565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146101ca57600080fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ded6338b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016102869190610855565b602060405180830381865afa1580156102a3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102c79190610885565b6040518363ffffffff1660e01b81526004016102e49291906108d3565b6020604051808303816000875af1158015610303573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103279190610934565b61033057600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f19350505050158015610398573d6000803e3d6000fd5b50565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146103f557600080fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166108fc479081150290604051600060405180830381858888f1935050505015801561045d573d6000803e3d6000fd5b50565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b67016345785d8a000081565b60005481565b6000600a905067016345785d8a00006012826104b49190610ac3565b6104be9190610b3d565b90506104ca348261069a565b82146104d557600080fd5b81600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b81526004016105319190610855565b602060405180830381865afa15801561054e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105729190610885565b101561057d57600080fd5b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663ded6338b33846040518363ffffffff1660e01b81526004016105da929190610b6e565b6020604051808303816000875af11580156105f9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061061d9190610934565b61062657600080fd5b816000808282546106379190610b97565b9250508190555042433373ffffffffffffffffffffffffffffffffffffffff167fe771a8c700d0802cd276270eb0596a1aead6f28237a9e5f26e00ccf08dad703385600054483a60405161068e9493929190610bed565b60405180910390a45050565b6000808214806106c25750828283856106b39190610c32565b9250826106c09190610b3d565b145b6106cb57600080fd5b92915050565b600060ff82169050919050565b6106e7816106d1565b82525050565b600060208201905061070260008301846106de565b92915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b600061074d61074861074384610708565b610728565b610708565b9050919050565b600061075f82610732565b9050919050565b600061077182610754565b9050919050565b61078181610766565b82525050565b600060208201905061079c6000830184610778565b92915050565b6000819050919050565b6107b5816107a2565b82525050565b60006020820190506107d060008301846107ac565b92915050565b600080fd5b6107e4816107a2565b81146107ef57600080fd5b50565b600081359050610801816107db565b92915050565b60006020828403121561081d5761081c6107d6565b5b600061082b848285016107f2565b91505092915050565b600061083f82610708565b9050919050565b61084f81610834565b82525050565b600060208201905061086a6000830184610846565b92915050565b60008151905061087f816107db565b92915050565b60006020828403121561089b5761089a6107d6565b5b60006108a984828501610870565b91505092915050565b60006108bd82610754565b9050919050565b6108cd816108b2565b82525050565b60006040820190506108e860008301856108c4565b6108f560208301846107ac565b9392505050565b60008115159050919050565b610911816108fc565b811461091c57600080fd5b50565b60008151905061092e81610908565b92915050565b60006020828403121561094a576109496107d6565b5b60006109588482850161091f565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008160011c9050919050565b6000808291508390505b60018511156109e7578086048111156109c3576109c2610961565b5b60018516156109d25780820291505b80810290506109e085610990565b94506109a7565b94509492505050565b600082610a005760019050610abc565b81610a0e5760009050610abc565b8160018114610a245760028114610a2e57610a5d565b6001915050610abc565b60ff841115610a4057610a3f610961565b5b8360020a915084821115610a5757610a56610961565b5b50610abc565b5060208310610133831016604e8410600b8410161715610a925782820a905083811115610a8d57610a8c610961565b5b610abc565b610a9f848484600161099d565b92509050818404811115610ab657610ab5610961565b5b81810290505b9392505050565b6000610ace826107a2565b9150610ad9836106d1565b9250610b067fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff84846109f0565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000610b48826107a2565b9150610b53836107a2565b925082610b6357610b62610b0e565b5b828204905092915050565b6000604082019050610b836000830185610846565b610b9060208301846107ac565b9392505050565b6000610ba2826107a2565b9150610bad836107a2565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610be257610be1610961565b5b828201905092915050565b6000608082019050610c0260008301876107ac565b610c0f60208301866107ac565b610c1c60408301856107ac565b610c2960608301846107ac565b95945050505050565b6000610c3d826107a2565b9150610c48836107a2565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615610c8157610c80610961565b5b82820290509291505056fea2646970667358221220a5ab0f2b5ec42cb960bc11f168d5e68785b562c67e0a335e28daa082a9b27fc464736f6c634300080c0033",
			"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x70 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x658D4E4F GT PUSH2 0x4E JUMPI DUP1 PUSH4 0x658D4E4F EQ PUSH2 0xCE JUMPI DUP1 PUSH4 0xB02A668E EQ PUSH2 0xF9 JUMPI DUP1 PUSH4 0xC79BF7CA EQ PUSH2 0x124 JUMPI DUP1 PUSH4 0xFE468196 EQ PUSH2 0x14F JUMPI PUSH2 0x70 JUMP JUMPDEST DUP1 PUSH4 0x313CE567 EQ PUSH2 0x75 JUMPI DUP1 PUSH4 0x380D831B EQ PUSH2 0xA0 JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0xB7 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x81 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x8A PUSH2 0x16B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x97 SWAP2 SWAP1 PUSH2 0x6ED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xB5 PUSH2 0x170 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xC3 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xCC PUSH2 0x39B JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xDA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0xE3 PUSH2 0x460 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xF0 SWAP2 SWAP1 PUSH2 0x787 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x105 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x10E PUSH2 0x486 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11B SWAP2 SWAP1 PUSH2 0x7BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x130 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x139 PUSH2 0x492 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x146 SWAP2 SWAP1 PUSH2 0x7BB JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x169 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x164 SWAP2 SWAP1 PUSH2 0x807 JUMP JUMPDEST PUSH2 0x498 JUMP JUMPDEST STOP JUMPDEST PUSH1 0x12 DUP2 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1CA JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDED6338B PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x286 SWAP2 SWAP1 PUSH2 0x855 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x2A3 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x2C7 SWAP2 SWAP1 PUSH2 0x885 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2E4 SWAP3 SWAP2 SWAP1 PUSH2 0x8D3 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x303 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x327 SWAP2 SWAP1 PUSH2 0x934 JUMP JUMPDEST PUSH2 0x330 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x398 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x3F5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x8FC SELFBALANCE SWAP1 DUP2 ISZERO MUL SWAP1 PUSH1 0x40 MLOAD PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x45D JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 JUMP JUMPDEST PUSH8 0x16345785D8A0000 DUP2 JUMP JUMPDEST PUSH1 0x0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA SWAP1 POP PUSH8 0x16345785D8A0000 PUSH1 0x12 DUP3 PUSH2 0x4B4 SWAP2 SWAP1 PUSH2 0xAC3 JUMP JUMPDEST PUSH2 0x4BE SWAP2 SWAP1 PUSH2 0xB3D JUMP JUMPDEST SWAP1 POP PUSH2 0x4CA CALLVALUE DUP3 PUSH2 0x69A JUMP JUMPDEST DUP3 EQ PUSH2 0x4D5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x70A08231 ADDRESS PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x531 SWAP2 SWAP1 PUSH2 0x855 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x54E JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x572 SWAP2 SWAP1 PUSH2 0x885 JUMP JUMPDEST LT ISZERO PUSH2 0x57D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xDED6338B CALLER DUP5 PUSH1 0x40 MLOAD DUP4 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5DA SWAP3 SWAP2 SWAP1 PUSH2 0xB6E JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x5F9 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x61D SWAP2 SWAP1 PUSH2 0x934 JUMP JUMPDEST PUSH2 0x626 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x0 DUP1 DUP3 DUP3 SLOAD PUSH2 0x637 SWAP2 SWAP1 PUSH2 0xB97 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP TIMESTAMP NUMBER CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0xE771A8C700D0802CD276270EB0596A1AEAD6F28237A9E5F26E00CCF08DAD7033 DUP6 PUSH1 0x0 SLOAD BASEFEE GASPRICE PUSH1 0x40 MLOAD PUSH2 0x68E SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0xBED JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 EQ DUP1 PUSH2 0x6C2 JUMPI POP DUP3 DUP3 DUP4 DUP6 PUSH2 0x6B3 SWAP2 SWAP1 PUSH2 0xC32 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x6C0 SWAP2 SWAP1 PUSH2 0xB3D JUMP JUMPDEST EQ JUMPDEST PUSH2 0x6CB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x6E7 DUP2 PUSH2 0x6D1 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x702 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x6DE JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x74D PUSH2 0x748 PUSH2 0x743 DUP5 PUSH2 0x708 JUMP JUMPDEST PUSH2 0x728 JUMP JUMPDEST PUSH2 0x708 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x75F DUP3 PUSH2 0x732 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x771 DUP3 PUSH2 0x754 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x781 DUP2 PUSH2 0x766 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x79C PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x778 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x7B5 DUP2 PUSH2 0x7A2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x7D0 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x7AC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x7E4 DUP2 PUSH2 0x7A2 JUMP JUMPDEST DUP2 EQ PUSH2 0x7EF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x801 DUP2 PUSH2 0x7DB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x81D JUMPI PUSH2 0x81C PUSH2 0x7D6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x82B DUP5 DUP3 DUP6 ADD PUSH2 0x7F2 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x83F DUP3 PUSH2 0x708 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x84F DUP2 PUSH2 0x834 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x86A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x846 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x87F DUP2 PUSH2 0x7DB JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x89B JUMPI PUSH2 0x89A PUSH2 0x7D6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x8A9 DUP5 DUP3 DUP6 ADD PUSH2 0x870 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x8BD DUP3 PUSH2 0x754 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x8CD DUP2 PUSH2 0x8B2 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0x8E8 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x8C4 JUMP JUMPDEST PUSH2 0x8F5 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x7AC JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x911 DUP2 PUSH2 0x8FC JUMP JUMPDEST DUP2 EQ PUSH2 0x91C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP PUSH2 0x92E DUP2 PUSH2 0x908 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x94A JUMPI PUSH2 0x949 PUSH2 0x7D6 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x958 DUP5 DUP3 DUP6 ADD PUSH2 0x91F JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x1 SHR SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP3 SWAP2 POP DUP4 SWAP1 POP JUMPDEST PUSH1 0x1 DUP6 GT ISZERO PUSH2 0x9E7 JUMPI DUP1 DUP7 DIV DUP2 GT ISZERO PUSH2 0x9C3 JUMPI PUSH2 0x9C2 PUSH2 0x961 JUMP JUMPDEST JUMPDEST PUSH1 0x1 DUP6 AND ISZERO PUSH2 0x9D2 JUMPI DUP1 DUP3 MUL SWAP2 POP JUMPDEST DUP1 DUP2 MUL SWAP1 POP PUSH2 0x9E0 DUP6 PUSH2 0x990 JUMP JUMPDEST SWAP5 POP PUSH2 0x9A7 JUMP JUMPDEST SWAP5 POP SWAP5 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0xA00 JUMPI PUSH1 0x1 SWAP1 POP PUSH2 0xABC JUMP JUMPDEST DUP2 PUSH2 0xA0E JUMPI PUSH1 0x0 SWAP1 POP PUSH2 0xABC JUMP JUMPDEST DUP2 PUSH1 0x1 DUP2 EQ PUSH2 0xA24 JUMPI PUSH1 0x2 DUP2 EQ PUSH2 0xA2E JUMPI PUSH2 0xA5D JUMP JUMPDEST PUSH1 0x1 SWAP2 POP POP PUSH2 0xABC JUMP JUMPDEST PUSH1 0xFF DUP5 GT ISZERO PUSH2 0xA40 JUMPI PUSH2 0xA3F PUSH2 0x961 JUMP JUMPDEST JUMPDEST DUP4 PUSH1 0x2 EXP SWAP2 POP DUP5 DUP3 GT ISZERO PUSH2 0xA57 JUMPI PUSH2 0xA56 PUSH2 0x961 JUMP JUMPDEST JUMPDEST POP PUSH2 0xABC JUMP JUMPDEST POP PUSH1 0x20 DUP4 LT PUSH2 0x133 DUP4 LT AND PUSH1 0x4E DUP5 LT PUSH1 0xB DUP5 LT AND OR ISZERO PUSH2 0xA92 JUMPI DUP3 DUP3 EXP SWAP1 POP DUP4 DUP2 GT ISZERO PUSH2 0xA8D JUMPI PUSH2 0xA8C PUSH2 0x961 JUMP JUMPDEST JUMPDEST PUSH2 0xABC JUMP JUMPDEST PUSH2 0xA9F DUP5 DUP5 DUP5 PUSH1 0x1 PUSH2 0x99D JUMP JUMPDEST SWAP3 POP SWAP1 POP DUP2 DUP5 DIV DUP2 GT ISZERO PUSH2 0xAB6 JUMPI PUSH2 0xAB5 PUSH2 0x961 JUMP JUMPDEST JUMPDEST DUP2 DUP2 MUL SWAP1 POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xACE DUP3 PUSH2 0x7A2 JUMP JUMPDEST SWAP2 POP PUSH2 0xAD9 DUP4 PUSH2 0x6D1 JUMP JUMPDEST SWAP3 POP PUSH2 0xB06 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP5 DUP5 PUSH2 0x9F0 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xB48 DUP3 PUSH2 0x7A2 JUMP JUMPDEST SWAP2 POP PUSH2 0xB53 DUP4 PUSH2 0x7A2 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0xB63 JUMPI PUSH2 0xB62 PUSH2 0xB0E JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 DUP3 ADD SWAP1 POP PUSH2 0xB83 PUSH1 0x0 DUP4 ADD DUP6 PUSH2 0x846 JUMP JUMPDEST PUSH2 0xB90 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x7AC JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xBA2 DUP3 PUSH2 0x7A2 JUMP JUMPDEST SWAP2 POP PUSH2 0xBAD DUP4 PUSH2 0x7A2 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0xBE2 JUMPI PUSH2 0xBE1 PUSH2 0x961 JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0xC02 PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x7AC JUMP JUMPDEST PUSH2 0xC0F PUSH1 0x20 DUP4 ADD DUP7 PUSH2 0x7AC JUMP JUMPDEST PUSH2 0xC1C PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x7AC JUMP JUMPDEST PUSH2 0xC29 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x7AC JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0xC3D DUP3 PUSH2 0x7A2 JUMP JUMPDEST SWAP2 POP PUSH2 0xC48 DUP4 PUSH2 0x7A2 JUMP JUMPDEST SWAP3 POP DUP2 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0xC81 JUMPI PUSH2 0xC80 PUSH2 0x961 JUMP JUMPDEST JUMPDEST DUP3 DUP3 MUL SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xA5 0xAB 0xF 0x2B 0x5E 0xC4 0x2C 0xB9 PUSH1 0xBC GT CALL PUSH9 0xD5E68785B562C67E0A CALLER 0x5E 0x28 0xDA LOG0 DUP3 0xA9 0xB2 PUSH32 0xC464736F6C634300080C00330000000000000000000000000000000000000000 ",
			"sourceMap": "102:1621:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;137:35;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1509:212;;;;;;;;;;;;;:::i;:::-;;1376:127;;;;;;;;;;;;;:::i;:::-;;314:34;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;179:54;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;240:24;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;875:495;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;137:35;170:2;137:35;:::o;1509:212::-;1568:8;;;;;;;;;;;1554:22;;:10;:22;;;1546:31;;;;;;1595:12;;;;;;;;;;;:18;;;1614:8;;;;;;;;;;;1624:12;;;;;;;;;;;:22;;;1655:4;1624:37;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1595:67;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1587:76;;;;;;1674:8;;;;;;;;;;;:17;;:40;1692:21;1674:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1509:212::o;1376:127::-;1436:8;;;;;;;;;;;1422:22;;:10;:22;;;1414:31;;;;;;1456:8;;;;;;;;;;;:17;;:40;1474:21;1456:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1376:127::o;314:34::-;;;;;;;;;;;;;:::o;179:54::-;215:18;179:54;:::o;240:24::-;;;;:::o;875:495::-;943:13;959:2;943:18;;215;170:2;979:5;:15;;;;:::i;:::-;:25;;;;:::i;:::-;971:33;;1041:26;1050:9;1061:5;1041:8;:26::i;:::-;1023:14;:44;1015:53;;;;;;1127:14;1086:12;;;;;;;;;;;:22;;;1117:4;1086:37;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:55;;1078:64;;;;;;1160:12;;;;;;;;;;;:18;;;1179:10;1191:14;1160:46;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1152:55;;;;;;1231:14;1218:9;;:27;;;;;;;:::i;:::-;;;;;;;;1347:15;1333:12;1266:10;1261:102;;;1278:14;1294:9;;1305:13;1320:11;1261:102;;;;;;;;;:::i;:::-;;;;;;;;932:438;875:495;:::o;741:128::-;804:6;836:1;831;:6;:30;;;;860:1;855;850;846;:5;;;;:::i;:::-;842:9;;;841:15;;;;:::i;:::-;:20;831:30;823:39;;;;;;741:128;;;;:::o;7:86:2:-;42:7;82:4;75:5;71:16;60:27;;7:86;;;:::o;99:112::-;182:22;198:5;182:22;:::i;:::-;177:3;170:35;99:112;;:::o;217:214::-;306:4;344:2;333:9;329:18;321:26;;357:67;421:1;410:9;406:17;397:6;357:67;:::i;:::-;217:214;;;;:::o;437:126::-;474:7;514:42;507:5;503:54;492:65;;437:126;;;:::o;569:60::-;597:3;618:5;611:12;;569:60;;;:::o;635:142::-;685:9;718:53;736:34;745:24;763:5;745:24;:::i;:::-;736:34;:::i;:::-;718:53;:::i;:::-;705:66;;635:142;;;:::o;783:126::-;833:9;866:37;897:5;866:37;:::i;:::-;853:50;;783:126;;;:::o;915:148::-;987:9;1020:37;1051:5;1020:37;:::i;:::-;1007:50;;915:148;;;:::o;1069:175::-;1178:59;1231:5;1178:59;:::i;:::-;1173:3;1166:72;1069:175;;:::o;1250:266::-;1365:4;1403:2;1392:9;1388:18;1380:26;;1416:93;1506:1;1495:9;1491:17;1482:6;1416:93;:::i;:::-;1250:266;;;;:::o;1522:77::-;1559:7;1588:5;1577:16;;1522:77;;;:::o;1605:118::-;1692:24;1710:5;1692:24;:::i;:::-;1687:3;1680:37;1605:118;;:::o;1729:222::-;1822:4;1860:2;1849:9;1845:18;1837:26;;1873:71;1941:1;1930:9;1926:17;1917:6;1873:71;:::i;:::-;1729:222;;;;:::o;2038:117::-;2147:1;2144;2137:12;2284:122;2357:24;2375:5;2357:24;:::i;:::-;2350:5;2347:35;2337:63;;2396:1;2393;2386:12;2337:63;2284:122;:::o;2412:139::-;2458:5;2496:6;2483:20;2474:29;;2512:33;2539:5;2512:33;:::i;:::-;2412:139;;;;:::o;2557:329::-;2616:6;2665:2;2653:9;2644:7;2640:23;2636:32;2633:119;;;2671:79;;:::i;:::-;2633:119;2791:1;2816:53;2861:7;2852:6;2841:9;2837:22;2816:53;:::i;:::-;2806:63;;2762:117;2557:329;;;;:::o;2892:96::-;2929:7;2958:24;2976:5;2958:24;:::i;:::-;2947:35;;2892:96;;;:::o;2994:118::-;3081:24;3099:5;3081:24;:::i;:::-;3076:3;3069:37;2994:118;;:::o;3118:222::-;3211:4;3249:2;3238:9;3234:18;3226:26;;3262:71;3330:1;3319:9;3315:17;3306:6;3262:71;:::i;:::-;3118:222;;;;:::o;3346:143::-;3403:5;3434:6;3428:13;3419:22;;3450:33;3477:5;3450:33;:::i;:::-;3346:143;;;;:::o;3495:351::-;3565:6;3614:2;3602:9;3593:7;3589:23;3585:32;3582:119;;;3620:79;;:::i;:::-;3582:119;3740:1;3765:64;3821:7;3812:6;3801:9;3797:22;3765:64;:::i;:::-;3755:74;;3711:128;3495:351;;;;:::o;3852:134::-;3910:9;3943:37;3974:5;3943:37;:::i;:::-;3930:50;;3852:134;;;:::o;3992:147::-;4087:45;4126:5;4087:45;:::i;:::-;4082:3;4075:58;3992:147;;:::o;4145:348::-;4274:4;4312:2;4301:9;4297:18;4289:26;;4325:79;4401:1;4390:9;4386:17;4377:6;4325:79;:::i;:::-;4414:72;4482:2;4471:9;4467:18;4458:6;4414:72;:::i;:::-;4145:348;;;;;:::o;4499:90::-;4533:7;4576:5;4569:13;4562:21;4551:32;;4499:90;;;:::o;4595:116::-;4665:21;4680:5;4665:21;:::i;:::-;4658:5;4655:32;4645:60;;4701:1;4698;4691:12;4645:60;4595:116;:::o;4717:137::-;4771:5;4802:6;4796:13;4787:22;;4818:30;4842:5;4818:30;:::i;:::-;4717:137;;;;:::o;4860:345::-;4927:6;4976:2;4964:9;4955:7;4951:23;4947:32;4944:119;;;4982:79;;:::i;:::-;4944:119;5102:1;5127:61;5180:7;5171:6;5160:9;5156:22;5127:61;:::i;:::-;5117:71;;5073:125;4860:345;;;;:::o;5211:180::-;5259:77;5256:1;5249:88;5356:4;5353:1;5346:15;5380:4;5377:1;5370:15;5397:102;5439:8;5486:5;5483:1;5479:13;5458:34;;5397:102;;;:::o;5505:848::-;5566:5;5573:4;5597:6;5588:15;;5621:5;5612:14;;5635:712;5656:1;5646:8;5643:15;5635:712;;;5751:4;5746:3;5742:14;5736:4;5733:24;5730:50;;;5760:18;;:::i;:::-;5730:50;5810:1;5800:8;5796:16;5793:451;;;6225:4;6218:5;6214:16;6205:25;;5793:451;6275:4;6269;6265:15;6257:23;;6305:32;6328:8;6305:32;:::i;:::-;6293:44;;5635:712;;;5505:848;;;;;;;:::o;6359:1073::-;6413:5;6604:8;6594:40;;6625:1;6616:10;;6627:5;;6594:40;6653:4;6643:36;;6670:1;6661:10;;6672:5;;6643:36;6739:4;6787:1;6782:27;;;;6823:1;6818:191;;;;6732:277;;6782:27;6800:1;6791:10;;6802:5;;;6818:191;6863:3;6853:8;6850:17;6847:43;;;6870:18;;:::i;:::-;6847:43;6919:8;6916:1;6912:16;6903:25;;6954:3;6947:5;6944:14;6941:40;;;6961:18;;:::i;:::-;6941:40;6994:5;;;6732:277;;7118:2;7108:8;7105:16;7099:3;7093:4;7090:13;7086:36;7068:2;7058:8;7055:16;7050:2;7044:4;7041:12;7037:35;7021:111;7018:246;;;7174:8;7168:4;7164:19;7155:28;;7209:3;7202:5;7199:14;7196:40;;;7216:18;;:::i;:::-;7196:40;7249:5;;7018:246;7289:42;7327:3;7317:8;7311:4;7308:1;7289:42;:::i;:::-;7274:57;;;;7363:4;7358:3;7354:14;7347:5;7344:25;7341:51;;;7372:18;;:::i;:::-;7341:51;7421:4;7414:5;7410:16;7401:25;;6359:1073;;;;;;:::o;7438:281::-;7496:5;7520:23;7538:4;7520:23;:::i;:::-;7512:31;;7564:25;7580:8;7564:25;:::i;:::-;7552:37;;7608:104;7645:66;7635:8;7629:4;7608:104;:::i;:::-;7599:113;;7438:281;;;;:::o;7725:180::-;7773:77;7770:1;7763:88;7870:4;7867:1;7860:15;7894:4;7891:1;7884:15;7911:185;7951:1;7968:20;7986:1;7968:20;:::i;:::-;7963:25;;8002:20;8020:1;8002:20;:::i;:::-;7997:25;;8041:1;8031:35;;8046:18;;:::i;:::-;8031:35;8088:1;8085;8081:9;8076:14;;7911:185;;;;:::o;8102:332::-;8223:4;8261:2;8250:9;8246:18;8238:26;;8274:71;8342:1;8331:9;8327:17;8318:6;8274:71;:::i;:::-;8355:72;8423:2;8412:9;8408:18;8399:6;8355:72;:::i;:::-;8102:332;;;;;:::o;8440:305::-;8480:3;8499:20;8517:1;8499:20;:::i;:::-;8494:25;;8533:20;8551:1;8533:20;:::i;:::-;8528:25;;8687:1;8619:66;8615:74;8612:1;8609:81;8606:107;;;8693:18;;:::i;:::-;8606:107;8737:1;8734;8730:9;8723:16;;8440:305;;;;:::o;8751:553::-;8928:4;8966:3;8955:9;8951:19;8943:27;;8980:71;9048:1;9037:9;9033:17;9024:6;8980:71;:::i;:::-;9061:72;9129:2;9118:9;9114:18;9105:6;9061:72;:::i;:::-;9143;9211:2;9200:9;9196:18;9187:6;9143:72;:::i;:::-;9225;9293:2;9282:9;9278:18;9269:6;9225:72;:::i;:::-;8751:553;;;;;;;:::o;9310:348::-;9350:7;9373:20;9391:1;9373:20;:::i;:::-;9368:25;;9407:20;9425:1;9407:20;:::i;:::-;9402:25;;9595:1;9527:66;9523:74;9520:1;9517:81;9512:1;9505:9;9498:17;9494:105;9491:131;;;9602:18;;:::i;:::-;9491:131;9650:1;9647;9643:9;9632:20;;9310:348;;;;:::o"
		},
		"gasEstimates": {
			"creation": {
				"codeDepositCost": "653200",
				"executionCost": "infinite",
				"totalCost": "infinite"
			},
			"external": {
				"CoinContract()": "infinite",
				"CoinPrice()": "351",
				"CoinsSold()": "2473",
				"buyCoins(uint256)": "infinite",
				"decimals()": "336",
				"endSale()": "infinite",
				"withdraw()": "infinite"
			},
			"internal": {
				"multiply(uint256,uint256)": "infinite"
			}
		},
		"methodIdentifiers": {
			"CoinContract()": "658d4e4f",
			"CoinPrice()": "b02a668e",
			"CoinsSold()": "c79bf7ca",
			"buyCoins(uint256)": "fe468196",
			"decimals()": "313ce567",
			"endSale()": "380d831b",
			"withdraw()": "3ccfd60b"
		}
	},
	"abi": [
		{
			"inputs": [
				{
					"internalType": "contract ChocolateCoin2",
					"name": "_CoinContract",
					"type": "address"
				}
			],
			"stateMutability": "nonpayable",
			"type": "constructor"
		},
		{
			"anonymous": false,
			"inputs": [
				{
					"indexed": true,
					"internalType": "address",
					"name": "_buyer",
					"type": "address"
				},
				{
					"indexed": false,
					"internalType": "uint256",
					"name": "_amount",
					"type": "uint256"
				},
				{
					"indexed": false,
					"internalType": "uint256",
					"name": "_total",
					"type": "uint256"
				},
				{
					"indexed": false,
					"internalType": "uint256",
					"name": "_gasBase",
					"type": "uint256"
				},
				{
					"indexed": false,
					"internalType": "uint256",
					"name": "_gasPrice",
					"type": "uint256"
				},
				{
					"indexed": true,
					"internalType": "uint256",
					"name": "_block",
					"type": "uint256"
				},
				{
					"indexed": true,
					"internalType": "uint256",
					"name": "_timestamp",
					"type": "uint256"
				}
			],
			"name": "Sell",
			"type": "event"
		},
		{
			"inputs": [],
			"name": "CoinContract",
			"outputs": [
				{
					"internalType": "contract ChocolateCoin2",
					"name": "",
					"type": "address"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "CoinPrice",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "CoinsSold",
			"outputs": [
				{
					"internalType": "uint256",
					"name": "",
					"type": "uint256"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [
				{
					"internalType": "uint256",
					"name": "_numberOfCoins",
					"type": "uint256"
				}
			],
			"name": "buyCoins",
			"outputs": [],
			"stateMutability": "payable",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "decimals",
			"outputs": [
				{
					"internalType": "uint8",
					"name": "",
					"type": "uint8"
				}
			],
			"stateMutability": "view",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "endSale",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		},
		{
			"inputs": [],
			"name": "withdraw",
			"outputs": [],
			"stateMutability": "nonpayable",
			"type": "function"
		}
	]
}